const t={ID:"token-action-hud-l5r5e"},e={ID:"token-action-hud-core"},i="2.0.12",s={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},n={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},a={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},l={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},r={razor_edged:"tokenActionHud.l5r5e.qualities.razorEdged",ceremonial:"tokenActionHud.l5r5e.qualities.ceremonial",damaged:"tokenActionHud.l5r5e.qualities.damaged",destroyed:"tokenActionHud.l5r5e.qualities.destroyed",concealable:"tokenActionHud.l5r5e.qualities.concealable",cumbersome:"tokenActionHud.l5r5e.qualities.cumbersome",snaring:"tokenActionHud.l5r5e.qualities.snaring",unholy:"tokenActionHud.l5r5e.qualities.unholy",forbidden:"tokenActionHud.l5r5e.qualities.forbidden",resplendent:"tokenActionHud.l5r5e.qualities.resplendent",wargear:"tokenActionHud.l5r5e.qualities.wargear",mundane:"tokenActionHud.l5r5e.qualities.mundane",prepare:"tokenActionHud.l5r5e.qualities.prepare",sacred:"tokenActionHud.l5r5e.qualities.sacred",durable:"tokenActionHud.l5r5e.qualities.durable",subtle:"tokenActionHud.l5r5e.qualities.subtle",kenzo_blade:"tokenActionHud.l5r5e.qualities.kenzoBlade"},o={jade_inlay:"tokenActionHud.l5r5e.patterns.jadeInlay",uchema:"tokenActionHud.l5r5e.patterns.uchema",yasunori:"tokenActionHud.l5r5e.patterns.yasunori",akodo:"tokenActionHud.l5r5e.patterns.akodo",burning_water:"tokenActionHud.l5r5e.patterns.burningWater",concealment:"tokenActionHud.l5r5e.patterns.concealment",deadly_fangs:"tokenActionHud.l5r5e.patterns.deadlyFangs",fearsome_snarl:"tokenActionHud.l5r5e.patterns.fearsomeSnarl",ichiro:"tokenActionHud.l5r5e.patterns.ichiro",mountain_silk:"tokenActionHud.l5r5e.patterns.mountainSilk",screaming_fire:"tokenActionHud.l5r5e.patterns.screamingFire",toriyama:"tokenActionHud.l5r5e.patterns.toriyama",qamarist:"tokenActionHud.l5r5e.patterns.qamarist",yodhaniya:"tokenActionHud.l5r5e.patterns.yodhaniya",kokejin:"tokenActionHud.l5r5e.patterns.kokejin",agasha:"tokenActionHud.l5r5e.patterns.agasha"},c={default:{icon:"fa-solid fa-tag",class:"tah-tag-secondary"},pattern:{icon:"fa-solid fa-swatchbook",class:"tah-tag-tertiary"},bonus:{icon:"fa-solid fa-arrow-up-right-dots",class:"tah-tag-alt"},clan:{label:"tokenActionHud.l5r5e.tags.clan",icon:"fa-solid fa-flag",class:"tah-tag-secondary"},culture:{label:"tokenActionHud.l5r5e.tags.culture",icon:"fa-solid fa-earth-asia",class:"tah-tag-secondary"},material:{label:"tokenActionHud.l5r5e.tags.material",icon:"fa-solid fa-gem",class:"tah-tag-secondary"},tradition:{label:"tokenActionHud.l5r5e.tags.tradition",icon:"fa-solid fa-scroll",class:"tah-tag-secondary"}},u={armorTN:{label:"tokenActionHud.l5r5e.bonuses.armorTN",icon:"fa-solid fa-shield-halved",class:"tah-tag-alt"},resistance:{label:"tokenActionHud.l5r5e.bonuses.resistance",icon:"fa-solid fa-shield",class:"tah-tag-alt"},fatigue:{label:"tokenActionHud.l5r5e.bonuses.fatigue",icon:"fa-solid fa-heart-pulse",class:"tah-tag-alt"},strife:{label:"tokenActionHud.l5r5e.bonuses.strife",icon:"fa-solid fa-fire",class:"tah-tag-alt"},deadliness:{label:"tokenActionHud.l5r5e.bonuses.deadliness",icon:"fa-solid fa-skull",class:"tah-tag-alt"},damage:{label:"tokenActionHud.l5r5e.bonuses.damage",icon:"fa-solid fa-burst",class:"tah-tag-alt"},opportunities:{label:"tokenActionHud.l5r5e.bonuses.opportunities",icon:"fa-solid fa-dice-d20",class:"tah-tag-alt"}};let d=null;function createActionHandlerClass(t){return class ActionHandler extends t.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.displayUnequipped=d.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["armor","equipment","weapons"],this.techniqueGroupIds=["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school-ability","mastery-ability","title-ability"],await this.#i()):this.actor||this.#s()}async#i(){await Promise.all([this.#n(),this.#a()]),this.#l(),this.#r()}#s(){if(0===(this.tokens??[]).length)return;const e=this.actors??[],i=[],s=t.Utils.i18n?.("tokenActionHud.utility.endTurn")??game.i18n.localize?.("tokenActionHud.utility.endTurn")??"End Turn";if(i.push({id:"endTurn",name:s,encodedValue:["utility","endTurn"].join(this.delimiter),listName:`${t.Utils.i18n("tokenActionHud.utility")??"Utility"}: ${s}`}),i.length>0){const e={id:"utility",name:t.Utils.i18n("tokenActionHud.utility")??"Utility",type:"system"};this.addActions(i,e)}if(0===e.length)return;const n=e.find((t=>!!t));if(!n)return;const a=game.l5r5e?.HelpersL5r5e?.getRingsList(n)??[];if(0===a.length)return;const l=new Set(e.map((t=>t?.system?.stance)).filter((t=>"string"==typeof t))),r=a.map((i=>{try{const s=i.id,n=["ring",s].join(this.delimiter),a=t.Utils.i18n(`l5r5e.rings.${s}`)??i.label??s,r=e.map((t=>t?.system?.rings?.[s]?.value)).filter((t=>null!=t));let o=a;if(r.length===e.length&&r.length>0){const t=[...new Set(r)];o=1===t.length?`${a}: ${t[0]}`:`${a}: ${t.join("/")}`}else void 0!==i?.value&&(o=`${a}: ${i.value}`);let c="";1===l.size&&l.has(s)&&(c="toggle active");const u=t.Utils.i18n(`l5r5e.conflict.stances.${s}tip`)??"",d=t.Utils.getImage(`systems/l5r5e/assets/icons/rings/${s}.svg`),m=r.length?r.join("/"):"";return{id:s,name:o,img:d,encodedValue:n,cssClass:c,tooltip:u,listName:m?`${a}: ${m}`:a}}catch(e){return t.Logger?.error?.(e),null}})).filter((t=>!!t));if(0===r.length)return;const o={id:"rings",name:`${t.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"};this.addActions(r,o)}async#n(){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){const s=i.system.equipped,n=i.system?.quantity>0,a=this.#o(i),l=i.type;n&&(s&&(e.has("equipped")||e.set("equipped",new Map),e.get("equipped").set(t,i)),s||(e.has("unequipped")||e.set("unequipped",new Map),e.get("unequipped").set(t,i)),a&&("item"===l&&(e.has("equipment")||e.set("equipment",new Map),e.get("equipment").set(t,i)),"weapon"===l&&(e.has("weapons")||e.set("weapons",new Map),e.get("weapons").set(t,i)),"armor"===l&&(e.has("armor")||e.set("armor",new Map),e.get("armor").set(t,i))))}const i={equipment:t.Utils.i18n("l5r5e.items.title"),armor:t.Utils.i18n("l5r5e.armors.title"),weapons:t.Utils.i18n("l5r5e.weapons.title")};for(const t of this.inventorygroupIds){if(!e.has(t))continue;const s={id:t,name:i[t],type:"system"},n=e.get(t);await this.#c(n,s,t)}}#l(){const e="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const s=this.actor.system.stance,n={id:"rings",name:`${t.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},a=Object.values(i).map((i=>{try{const n=i.id,a=[e,n].join(this.delimiter),l=`${t.Utils.i18n(`l5r5e.rings.${n}`)}: ${i.value}`??"",r=`${`${i.label}:`??""}${l}`,o=t.Utils.getImage(`systems/l5r5e/assets/icons/rings/${n}.svg`),c=`${t.Utils.i18n(`l5r5e.conflict.stances.${n}tip`)}`;let u="";return n===s&&(u="toggle active"),{id:n,name:l,img:o,encodedValue:a,cssClass:u,tooltip:c,listName:r}}catch(e){return t.Logger.error(i),null}})).filter((t=>!!t));this.addActions(a,n)}#r(){if(!["character","npc"].includes(this.actorType))return;const e="skill",i=this.#u();for(const s of i){const i=s.id;try{const n={id:i,name:s.label,type:"system"},a=s.skills.map((s=>{const n=[e,s].join(this.delimiter),a=this.#d(i,s),l=this.#m(i,s),r=""!==a&&null!=a?`${l}: ${a}`:l;return{id:s,name:r,encodedValue:n,listName:`${`${t.Utils.i18n("l5r5e.skills.label")}: `??""}${r}`}}));this.addActions(a,n)}catch(e){return t.Logger.error(i),null}}}#u(){const t=game.l5r5e?.HelpersL5r5e??{},e="npc"===this.actorType?t.getNpcSkillsList?.(this.actor)??t.getNpcSkillsList?.()??t.getCategoriesSkillsList?.(this.actor)??t.getCategoriesSkillsList?.()??this.actor?.system?.skills??this.actor?.system?.npcSkills:t.getCategoriesSkillsList?.(this.actor)??t.getCategoriesSkillsList?.()??this.actor?.system?.skills;return this.#p(e).map((([t,e])=>{const i=this.#y(e);return{id:t,label:this.#h(t),skills:i}})).filter((t=>t.skills.length>0))}#p(t){return t?t instanceof Map?[...t.entries()]:Array.isArray(t)?t.map(((t,e)=>Array.isArray(t)?t:[e,t])):"object"==typeof t?Object.entries(t):[]:[]}#y(t){return t?t instanceof Map?this.#g([...t.values()]):Array.isArray(t)?this.#g(t.flatMap((t=>this.#y(t)))):"string"==typeof t?this.#g([t]):"object"==typeof t?t.id?this.#y(t.id):t.key?this.#y(t.key):t.value?this.#y(t.value):t.default?this.#y(t.default):this.#g(Object.values(t).flatMap((t=>this.#y(t)))):[]:[]}#g(t){return[...new Set(t.filter((t=>"string"==typeof t&&t)))]}#h(t){const e=[`l5r5e.npc.skills.${t}.title`,`l5r5e.skills.${t}.title`,`l5r5e.skills.${t}`,t];return this.#f(e)}#m(t,e){const i=[`l5r5e.npc.skills.${t}.${e}`,`l5r5e.skills.${t}.${e}`,`l5r5e.skills.${e}`,`l5r5e.skill.${e}`,e];return this.#f(i)}#d(t,e){const i=[this.actor?.system?.skills,this.actor?.system?.npcSkills,this.actor?.system?.npc?.skills,this.actor?.system?.skillRanks,this.actor?.system?.skillGroups,this.actor?.system?.skill_groups];for(const s of i){const i=s?.[t];if(!i)continue;const n=i?.[e],a=this.#k(n);if(null!=a)return a}const s=this.actor?.system?.skills?.[e],n=this.#k(s);return null!=n?n:""}#k(t){if(null==t)return null;if("number"==typeof t||"string"==typeof t)return t;if("object"==typeof t)for(const e of["value","rank","dice","level","rating"])if(void 0!==t[e])return t[e];return null}#f(e){for(const i of e){if(!i)continue;const e=t.Utils.i18n(i);if(e&&e!==i)return e}return e[e.length-1]??""}async#a(t){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){if(this.#b(i)){const s=String(i.system.technique_type).replace("_","-");e.has(s)||e.set(s,new Map),e.get(s).set(t,i)}}for(const t of this.techniqueGroupIds){if(!e.has(t))continue;const i={id:t,type:"system"},s=e.get(t);await this.#c(s,i,"technique")}}#t(){const e=["character","npc"],i=t.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return i.every((t=>e.includes(t.type)))?i:[]}#e(){const e=["character","npc"],i=t.Utils.getControlledTokens(),s=i?.filter((t=>t.actor)).map((t=>t.actor));return s.every((t=>e.includes(t.type)))?i:[]}#o(t){const e=t.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(e))return!0;return!!t.system.equipped}#b(t){if("technique"!==t.type)return!1;return!!["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school_ability","mastery_ability","title_ability"].includes(t.system.technique_type)}async#c(t,e,i="item"){if(0===t.size)return;if(!("string"==typeof e?e:e?.id))return;const s=await Promise.all([...t].map((async t=>await this.#A(i,t[1]))));this.addActions(s,e)}async#A(e,i){const n=i.id??i._id;let a=i?.name??i?.label;const l=`${`${t.Utils.i18n(s[e])}: `??""}${a}`;let r="";if(Object.hasOwn(i.system,"readied")){r=`toggle${i.system.readied?" active":""}`}const o=[e,n].join(this.delimiter),c=t.Utils.getImage(i),u=this.#I(i?.system?.activation?.type);let d=this.#v(i);const m=d?.info1,p=d?.info2,y=d?.info3,h=await this.#q(i);return{id:n,name:a,encodedValue:o,cssClass:r,img:c,icon1:u,icon2:null,info1:m,info2:p,info3:y,listName:l,tooltip:await this.#H(h)}}#I(t){}#v(t){return{info1:{text:this.#$(t)},info2:{text:this.#w(t)},info3:{text:this.#S(t)}}}#$(t){const e=t?.system?.quantity??0;return e>1?e:""}#w(t){const e=t?.system?.uses;return e&&(e.value>0||e.max>0)?`${e.value??"0"}${e.max>0?`/${e.max}`:""}`:""}#S(t){const e=t?.system?.consume?.target,i=t?.system?.consume?.type;if(e===t.id)return"";if("attribute"===i){if(!e)return"";const t=e.substr(0,e.lastIndexOf(".")),i=this.actor.system[t];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const s=this.items.get(e);if("charges"===i){const t=s?.system.uses;return t?.value?`${t.value}${t.max?`/${t.max}`:""}`:""}return s?.system?.quantity??""}async#q(t){if("none"===this.tooltipsSetting)return"";const e=t?.name??"";if("nameOnly"===this.tooltipsSetting)return e;const i="string"==typeof t?.system?.description?t?.system?.description:t?.system?.description?.value??"",s=t?.modifiers??null,n=[...t.system?.chatProperties??[],...t.system?.equippableItemCardProperties??[],...t.system?.activatedEffectCardProperties??[]].filter((t=>t)),a=t?.type;return{name:e,type:a,description:i,modifiers:s,properties:n,rarity:t?.system?.rarity??null,traits:this.#C(t?.system?.properties),patterns:this.#U(t?.system?.patterns),tags:this.#_(t?.system?.tags),bonuses:this.#T(t?.system?.bonuses),range:"weapon"===t?.type?t?.system?.range:null,damage:"weapon"===t?.type?t?.system?.damage:null,deadliness:"weapon"===t?.type?t?.system?.deadliness:null,grip1:"weapon"===t?.type?t?.system?.grip_1:null,grip2:"weapon"===t?.type?t?.system?.grip_2:null,physical:"armor"===t?.type?t?.system?.armor?.physical:null,supernatural:"armor"===t?.type?t?.system?.armor?.supernatural:null}}#C(e){if(!e)return null;const i=Object.entries(e).filter((([t,e])=>{if("boolean"==typeof e)return e;if("object"==typeof e){if(!1===e?.value)return!1;if(!1===e?.active)return!1}return!0})).map((([e,i])=>{const s=r[e],n=i?.label??i?.name??this.#j(e),a=s??n,l=!Boolean(!s&&n)&&a?t.Utils.i18n(a):a;return!l||l===a&&s&&n?n:l})).filter(Boolean);return i.length>0?i:null}async#H(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const i=t.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return i;const s=`<h3>${i}</h3>`,n=e?.descriptionLocalised??await TextEditor.enrichHTML(t.Utils.i18n(e?.description??""),{async:!0}),a=e?.traits?.length?`<div class="tah-properties">${e.traits.map((t=>`<span class="tah-property">${t}</span>`)).join("")}</div>`:"",l=[e?.rarity?[{label:"tokenActionHud.l5r5e.tooltip.rarity",value:e.rarity,class:this.#x(e.rarity)}]:[],"weapon"===e.type?this.#L(e):[],"weapon"===e.type?this.#M(e):[],"armor"===e.type?this.#R(e):[],e.patterns??[],e.tags??[],e.bonuses??[]].flat(),r=this.#D(l);return n||r?`<div>${s}${r?`<div class="tah-tags-wrapper">${r??""}</div>`:""}${n}${a}</div>`:i}#x(t){return t?t<3?"common":t<5?"uncommon":t<7?"rare":t<9?"veryRare":9==t?"legendary":10==t?"artifact":void 0:""}#L(t){return[t.range?{label:"l5r5e.weapons.range",value:t.range}:null,t.damage?{label:"l5r5e.weapons.damage",value:t.damage}:null,t.deadliness?{label:"l5r5e.weapons.deadliness",value:t.deadliness}:null].filter(Boolean)}#M(t){return[t.grip1&&"N/A"!==t.grip1?{label:"l5r5e.weapons.1hand",value:t.grip1}:null,t.grip2&&"N/A"!==t.grip2?{label:"l5r5e.weapons.2hand",value:t.grip2}:null].filter(Boolean)}#R(t){return[t?.physical&&t?.physical>0?{label:"l5r5e.armors.physical",value:t?.physical}:null,t?.supernatural&&t?.supernatural>0?{label:"l5r5e.armors.supernatural",value:t?.supernatural}:null].filter(Boolean)}#U(t){const e=this.#z(t);if(!e.length)return null;const i=c.pattern??c.default,s=i?.icon??c.default?.icon,n=i?.class??c.default?.class,a=e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},i=e?.id??e?.key??e?.slug??e?.name;if(!i)return null;if(!(!1!==(e?.active??e?.enabled??e?.value??!0)))return null;const a=o[i],l=e?.label??e?.name??this.#j(i);return a||l?{label:a??l,localized:!a&&Boolean(l),fallback:l,icon:s,class:n}:null})).filter(Boolean);return a.length?a:null}#_(t){const e=this.#z(t);return e.length?e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},i=e?.id??e?.key??e?.slug??e?.type??e?.name;if(!i)return null;if(!(!1!==(e?.active??e?.enabled??e?.value??!0)))return null;const s=c[i]??c.default,n=s?.label??(i?`tokenActionHud.l5r5e.tags.${i}`:null),a=e?.label??e?.name??this.#j(i),l=e?.amount??e?.rating??e?.value,r="number"==typeof l||"string"==typeof l?l:void 0;return n||a?{label:n??a,localized:!n&&Boolean(a),fallback:a,value:r,icon:s?.icon??c.default?.icon,class:s?.class??c.default?.class}:null})).filter(Boolean):null}#T(t){const e=this.#z(t);if(!e.length)return null;const i=c.bonus??c.default,s=e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},s=e?.id??e?.key??e?.slug??e?.type??e?.name;if(!s)return null;if(!(!1!==(e?.active??e?.enabled??!0)))return null;const n=u[s]??i,a=n?.label??(s?`tokenActionHud.l5r5e.bonuses.${s}`:null),l=e?.label??e?.name??this.#j(s),r=e?.value??e?.amount??e?.bonus??e?.rating,o="number"==typeof r||"string"==typeof r?r:void 0;return a||l||void 0!==o?{label:a??l,localized:!a&&Boolean(l),fallback:l,value:o,icon:n?.icon??i?.icon,class:n?.class??i?.class}:null})).filter(Boolean);return s.length?s:null}#D(t){if(!t||0===t.length)return"";const e=t.map((t=>this.#P(t))).filter(Boolean).join("");return e?`<div class="tah-tags">${e}</div>`:""}#P(e){if(!e)return"";const i=["tah-tag"];e.class&&i.push(e.class);const s=i.filter(Boolean).join(" "),n=e.icon?`<i class="${e.icon}" aria-hidden="true"></i>`:"";if(e.text)return`<span class="${s}">${n}${n?`<span class="tah-tag-text">${e.text}</span>`:e.text}</span>`;const a=e.label??"";let l="";if(e.localized?l=a:a&&(l=t.Utils.i18n(a),e.fallback&&l===a&&(l=e.fallback)),l||(l=e.fallback??""),!l)return"";const r=void 0!==e.value&&null!==e.value&&""!==e.value?`${l}: ${e.value}`:l;return`<span class="${s}"${e.title?` title="${e.title}"`:""}>${n?`${n}<span class="tah-tag-text">${r}</span>`:r}</span>`}#z(t){return t?Array.isArray(t)?t.filter((t=>null!=t)):t instanceof Set?[...t]:"object"==typeof t?Object.entries(t).map((([t,e])=>"object"==typeof e&&null!==e?{id:t,...e}:{id:t,value:e})):[t]:[]}#j(t){return t&&"string"==typeof t?t.replace(/[-_]/g," ").replace(/\s+/g," ").trim().replace(/\b\w/g,(t=>t.toUpperCase())):""}}}Hooks.once("tokenActionHudCoreApiReady",(async e=>{d=class Utils{static getSetting(i,s=null){let n=s??null;try{n=game.settings.get(t.ID,i)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}return n}static async setSetting(i,s){try{s=await game.settings.set(t.ID,i,s),e.api.Logger.debug(`Setting '${i}' set to '${s}'`)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}}}}));let m=null;function createRollHandlerClass(t){return class RollHandler extends t.RollHandler{async handleActionClick(t,e){const[i,s]=e.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,s);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#B(t,this.actor,s);const n=["character"];if(this.actor)return void await this.#E(t,this.actor,this.token,i,s);const a=canvas.tokens.controlled.filter((t=>n.includes(t.actor?.type)));for(const e of a){const n=e.actor;await this.#E(t,n,e,i,s)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#E(t,e,i,s,n){switch(s){case"weapons":this.#N(t,e,n);break;case"ring":this.#O(t,e,n);break;case"skill":this.#V(t,e,n);break;case"technique":this.#F(t,e,n);break;case"armor":case"equipment":await this.#G(t,e,n);break;case"utility":this.#W(i,n)}}async#G(t,e,i){const s=e.items.get(i);if(!s)return;const n=game.l5r5e??{},a=n.HelpersL5r5e??{},l=n.Chat??n.chat??{},r=[a.sendItemToChat,a.sendToChat,l.sendItemToChat,l.displayItem,s?.sendToChat?.bind(s),s?.displayCard?.bind(s),s?.toMessage?.bind(s)].filter((t=>"function"==typeof t));if(r.length>0)for(const t of r)try{return void await t(s)}catch(t){continue}"function"==typeof ChatMessage?.create?await ChatMessage.create({speaker:ChatMessage.getSpeaker({actor:e}),content:game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name})}):ui.notifications?.warn(game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name}))}async#B(t,e,i){const s=["character","npc"],n=Object.keys(CONFIG.l5r5e?.conflict?.stances??{});if(n.length>0&&!n.includes(i))return;const a=e?[e]:canvas.tokens.controlled.map((t=>t.actor)).filter((t=>t&&s.includes(t.type)));if(a&&0!==a.length)for(const t of a)if(s.includes(t.type)&&t.system?.stance!==i&&t.canUserModify?.(game.user,"update"))try{await t.update({"system.stance":i})}catch(t){console.error(t)}}#N(t,e,i){const s=e.items.get(i);if(!s)return;const n=this.#Q(s?.system?.skill),a=this.#K(s?.system?.ring),l={item:s,itemId:s.id,sourceId:s.id,type:s.type,title:s.name,difficulty:s?.system?.tn??s?.system?.difficulty??null,context:"token-action-hud"};n.length>0&&(l.skill=n[0],l.skillId=n[0],l.skills=n,l.skillsList=n),a&&(l.ring=a,l.ringId=a),this.#J(e,l)}#O(t,e,i){const s={ring:i,ringId:i,context:"token-action-hud"};this.#J(e,s)}#V(t,e,i){const s={skill:i,skillId:i,context:"token-action-hud"};this.#J(e,s)}#F(t,e,i){const s=e.items.get(i);if(!s||"technique"!==s.type||!s.system.skill)return;const n=this.#Q(s?.system?.skill),a=this.#K(s?.system?.ring),l=s?.system?.difficulty??s?.system?.tn??null,r={item:s,itemId:s.id,sourceId:s.id,type:s.type,title:s.name,difficulty:l,context:"token-action-hud"};n.length>0&&(r.skill=n[0],r.skillId=n[0],r.skills=n,r.skillsList=n),a&&(r.ring=a,r.ringId=a),this.#J(e,r)}#J(t,e={}){const i=game?.l5r5e?.DicePickerDialog;if(!i)return;const s={...e};t&&!s.actor&&(s.actor=t),t?.id&&!s.actorId&&(s.actorId=t.id);const n=this.#X([s.skill,s.skillId,...Array.isArray(s.skills)?s.skills:[],...Array.isArray(s.skillsList)?s.skillsList:[]]);n.length>0&&(s.skill=n[0],s.skillId=n[0],s.skills=n,s.skillsList=n);const a=this.#K(s.ring??s.ringId??s.ringKey);a&&(s.ring=a,s.ringId=a,s.ringKey=a),s.context||(s.context="token-action-hud");const l=[];("number"==typeof i.length?i.length:1)>1&&l.push(t),l.push(s);const r=new i(...l);"function"==typeof r.render&&r.render(!0)}#K(t){if(t){if("string"==typeof t)return t;if(Array.isArray(t))for(const e of t){const t=this.#K(e);if(t)return t}else if("object"==typeof t){const e=["ring","id","key","value","default","defaultRing"];for(const i of e)if(t[i]){const e=this.#K(t[i]);if(e)return e}}}}#Q(t){if(!t)return[];if(Array.isArray(t))return this.#X(t.flatMap((t=>this.#Q(t))));if("string"==typeof t)return[t];if("object"==typeof t){const e=["id","ids","skill","skills","value","values","default","primary"];for(const i of e)if(t[i])return this.#Q(t[i]);return this.#X(Object.values(t).flatMap((t=>this.#Q(t))))}return[]}#X(t){return[...new Set(t.filter((t=>"string"==typeof t&&t)))]}async#W(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}function createSystemManagerClass(t){const e=createActionHandlerClass(t),i=createRollHandlerClass(t);return class SystemManager extends t.SystemManager{getActionHandler(){return new e}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new i,e}async registerDefaults(){return m}registerSettings(t){register(t)}}}function getCoreModule(){const t=game.modules.get(e.ID);if(!t)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return t}function getCoreApi(){const t=getCoreModule();if(!t.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return t.api}Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=n;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const i=Object.values(e);m={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:t.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...e.rings,nestId:"attributes_rings"},{...e.derived,nestId:"attributes_derived"},{...e.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("l5r5e.skills.title"),groups:[{...e.artisan,nestId:"skills_artisan"},{...e.martial,nestId:"skills_martial"},{...e.scholar,nestId:"skills_scholar"},{...e.social,nestId:"skills_social"},{...e.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:t.api.Utils.i18n("l5r5e.techniques.title"),groups:[{...e.school_ability,nestId:"techniques_school"},{...e.mastery_ability,nestId:"techniques_mastery"},{...e.kata,nestId:"techniques_kata"},{...e.kiho,nestId:"techniques_kiho"},{...e.inversion,nestId:"techniques_inversion"},{...e.invocation,nestId:"techniques_invocation"},{...e.ritual,nestId:"techniques_ritual"},{...e.shuji,nestId:"techniques_shuji"},{...e.maho,nestId:"techniques_maho"},{...e.ninjutsu,nestId:"techniques_ninjutsu"},{...e.mantra,nestId:"techniques_mantra"},{...e.title_ability,nestId:"techniques_title"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:i}})),Hooks.once("tokenActionHudCoreApiReady",(e=>{try{if("function"!=typeof e.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(e);e.registerSystem({moduleId:t.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(t){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",t)}}));export{s as ACTION_TYPE,e as CORE_MODULE,m as DEFAULTS,n as GROUP,u as ITEM_BONUS,o as ITEM_PATTERN,r as ITEM_QUALITIES,c as ITEM_TAGS,a as ITEM_TYPE,t as MODULE,i as REQUIRED_CORE_MODULE_VERSION,l as SKILL_TYPE,d as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getCoreApi,getCoreModule,register};
