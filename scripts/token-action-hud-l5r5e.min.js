const t={ID:"token-action-hud-l5r5e"},e={ID:"token-action-hud-core"},i="2.0.12",n={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility",armor:"l5r5e.armors.title",equipped:"tokenActionHud.equipped",unequipped:"tokenActionHud.unequipped",equipment:"l5r5e.items.title",weapons:"l5r5e.weapons.title",technique:"l5r5e.techniques.title",ring:"l5r5e.rings.title",skill:"l5r5e.skills.title",derived:"l5r5e.attributes.title",standing:"l5r5e.social.title"},s={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},r={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},l={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},a={razor_edged:"tokenActionHud.l5r5e.qualities.razorEdged",ceremonial:"tokenActionHud.l5r5e.qualities.ceremonial",damaged:"tokenActionHud.l5r5e.qualities.damaged",destroyed:"tokenActionHud.l5r5e.qualities.destroyed",concealable:"tokenActionHud.l5r5e.qualities.concealable",cumbersome:"tokenActionHud.l5r5e.qualities.cumbersome",snaring:"tokenActionHud.l5r5e.qualities.snaring",unholy:"tokenActionHud.l5r5e.qualities.unholy",forbidden:"tokenActionHud.l5r5e.qualities.forbidden",resplendent:"tokenActionHud.l5r5e.qualities.resplendent",wargear:"tokenActionHud.l5r5e.qualities.wargear",mundane:"tokenActionHud.l5r5e.qualities.mundane",prepare:"tokenActionHud.l5r5e.qualities.prepare",sacred:"tokenActionHud.l5r5e.qualities.sacred",durable:"tokenActionHud.l5r5e.qualities.durable",subtle:"tokenActionHud.l5r5e.qualities.subtle",kenzo_blade:"tokenActionHud.l5r5e.qualities.kenzoBlade"},o={jade_inlay:"tokenActionHud.l5r5e.patterns.jadeInlay",uchema:"tokenActionHud.l5r5e.patterns.uchema",yasunori:"tokenActionHud.l5r5e.patterns.yasunori",akodo:"tokenActionHud.l5r5e.patterns.akodo",burning_water:"tokenActionHud.l5r5e.patterns.burningWater",concealment:"tokenActionHud.l5r5e.patterns.concealment",deadly_fangs:"tokenActionHud.l5r5e.patterns.deadlyFangs",fearsome_snarl:"tokenActionHud.l5r5e.patterns.fearsomeSnarl",ichiro:"tokenActionHud.l5r5e.patterns.ichiro",mountain_silk:"tokenActionHud.l5r5e.patterns.mountainSilk",screaming_fire:"tokenActionHud.l5r5e.patterns.screamingFire",toriyama:"tokenActionHud.l5r5e.patterns.toriyama",qamarist:"tokenActionHud.l5r5e.patterns.qamarist",yodhaniya:"tokenActionHud.l5r5e.patterns.yodhaniya",kokejin:"tokenActionHud.l5r5e.patterns.kokejin",agasha:"tokenActionHud.l5r5e.patterns.agasha"},c={default:{icon:"fa-solid fa-tag",class:"tah-tag-secondary"},pattern:{icon:"fa-solid fa-swatchbook",class:"tah-tag-tertiary"},bonus:{icon:"fa-solid fa-arrow-up-right-dots",class:"tah-tag-alt"},clan:{label:"tokenActionHud.l5r5e.tags.clan",icon:"fa-solid fa-flag",class:"tah-tag-secondary"},culture:{label:"tokenActionHud.l5r5e.tags.culture",icon:"fa-solid fa-earth-asia",class:"tah-tag-secondary"},material:{label:"tokenActionHud.l5r5e.tags.material",icon:"fa-solid fa-gem",class:"tah-tag-secondary"},tradition:{label:"tokenActionHud.l5r5e.tags.tradition",icon:"fa-solid fa-scroll",class:"tah-tag-secondary"}},u={armorTN:{label:"tokenActionHud.l5r5e.bonuses.armorTN",icon:"fa-solid fa-shield-halved",class:"tah-tag-alt"},resistance:{label:"tokenActionHud.l5r5e.bonuses.resistance",icon:"fa-solid fa-shield",class:"tah-tag-alt"},fatigue:{label:"tokenActionHud.l5r5e.bonuses.fatigue",icon:"fa-solid fa-heart-pulse",class:"tah-tag-alt"},strife:{label:"tokenActionHud.l5r5e.bonuses.strife",icon:"fa-solid fa-fire",class:"tah-tag-alt"},deadliness:{label:"tokenActionHud.l5r5e.bonuses.deadliness",icon:"fa-solid fa-skull",class:"tah-tag-alt"},damage:{label:"tokenActionHud.l5r5e.bonuses.damage",icon:"fa-solid fa-burst",class:"tah-tag-alt"},opportunities:{label:"tokenActionHud.l5r5e.bonuses.opportunities",icon:"fa-solid fa-dice-d20",class:"tah-tag-alt"}},d=[{id:"kata",actorKey:"kata",translationKey:"l5r5e.techniques.kata"},{id:"kiho",actorKey:"kiho",translationKey:"l5r5e.techniques.kiho"},{id:"inversion",actorKey:"inversion",translationKey:"l5r5e.techniques.inversion"},{id:"invocation",actorKey:"invocation",translationKey:"l5r5e.techniques.invocation"},{id:"ritual",actorKey:"ritual",translationKey:"l5r5e.techniques.ritual"},{id:"shuji",actorKey:"shuji",translationKey:"l5r5e.techniques.shuji"},{id:"maho",actorKey:"maho",translationKey:"l5r5e.techniques.maho"},{id:"ninjutsu",actorKey:"ninjutsu",translationKey:"l5r5e.techniques.ninjutsu"},{id:"mantra",actorKey:"mantra",translationKey:"l5r5e.techniques.mantra"},{id:"school-ability",actorKey:"school_ability",translationKey:"l5r5e.techniques.school_ability"},{id:"mastery-ability",actorKey:"mastery_ability",translationKey:"l5r5e.techniques.mastery_ability"},{id:"title-ability",actorKey:"title_ability",translationKey:"l5r5e.techniques.title_ability"}],p=[{id:"armor",actorKey:"armor",translationKey:"l5r5e.armors.title"},{id:"equipment",actorKey:"equipment",translationKey:"l5r5e.items.title"},{id:"weapons",actorKey:"weapons",translationKey:"l5r5e.weapons.title"}],y={derived:{helperMethods:["getDerivedAttributesList","getDerivedList","getDerivedAttributes"],helperArgsSets:t=>[[t],[]],configPaths:["derivedAttributes","derived","attributes.derived"],actorPaths:["derived","attributes.derived"],translationPrefix:"l5r5e.attributes"},standing:{helperMethods:["getStandingAttributesList","getStandingList","getSocialAttributesList","getSocialAttributes"],helperArgsSets:t=>[[t],[]],configPaths:["standingAttributes","standing","social","attributes.social"],actorPaths:["standing","social","attributes.standing","attributes.social"],translationPrefix:"l5r5e.social"}};function sanitizeId(t){if(null==t)return"";return String(t).trim().replace(/\s+/g,"-").replace(/_/g,"-").toLowerCase()}function unsanitizeId(t){if(null==t)return"";return String(t).trim().replace(/\s+/g,"_").replace(/-/g,"_")}function getTechniqueTypeEntries(){return dedupeEntries(collectEntries({helperMethods:["getTechniqueTypesList","getTechniqueTypes","getTechniquesTypesList","getTechniquesList"],configPaths:["techniqueTypes","technique_types","techniques.types","techniques.categories","techniques.type"],translationPrefix:"l5r5e.techniques",stringIsTranslation:!0,fallback:d}))}function getInventoryGroupEntries(){return dedupeEntries(collectEntries({helperMethods:["getInventoryGroupIds","getInventoryCategoriesList","getInventorySections"],configPaths:["inventory.groups","inventory.categories","inventoryCategories","itemGroups.inventory","items.inventory"],translationPrefix:null,stringIsTranslation:!0,fallback:p}))}function getAttributeEntries(t,e){const i=y[t];if(!i)return{entries:[],section:null};const n="function"==typeof i.helperArgsSets?i.helperArgsSets(e):i.helperArgsSets??[[]],s=collectEntries({helperMethods:i.helperMethods,helperArgsSets:n,configPaths:i.configPaths,translationPrefix:i.translationPrefix,stringIsTranslation:!0,fallback:[]}),r=getActorSection(e,i.actorPaths);if(s.length>0)return{entries:dedupeEntries(s),section:r};if(!r)return{entries:[],section:null};return{entries:dedupeEntries(Object.keys(r).map((t=>{const e=t;return{id:sanitizeId(e),actorKey:e,translationKey:i.translationPrefix?buildTranslationKey(i.translationPrefix,e):null}}))),section:r}}function getActorSection(t,e=[]){if(!t)return null;const i=t.system??{};for(const t of e){const e=getProperty(i,t);if(e)return e}return null}function collectEntries({helperMethods:t=[],helperArgsSets:e=[[]],configPaths:i=[],translationPrefix:n=null,stringIsTranslation:s=!1,fallback:r=[]}){const l=function getEntriesFromHelpers(t,e,i,n){const s=game?.l5r5e?.HelpersL5r5e;if(!s)return[];for(const r of t){const t=s?.[r];if("function"==typeof t)for(const l of e)try{const e=normalizeEntries(Array.isArray(l)?t.apply(s,l):t.call(s,l),{translationPrefix:i,stringIsTranslation:n});if(e.length>0)return e}catch(t){console.debug(`Token Action HUD L5R5e | Helper ${r} failed`,t)}}return[]}(t,e,n,s);if(l.length>0)return l;const a=function getEntriesFromConfig(t,e,i){const n=CONFIG?.l5r5e;if(!n)return[];for(const s of t){const t=normalizeEntries(getProperty(n,s),{translationPrefix:e,stringIsTranslation:i});if(t.length>0)return t}return[]}(i,n,s);return a.length>0?a:r}function normalizeEntries(t,e={}){if(!t)return[];if(t instanceof Map)return[...t.entries()].map((([t,i])=>normalizeEntry(i,t,e))).filter(Boolean);if(Array.isArray(t))return t.map(((t,i)=>normalizeEntry(t,t?.id??t?.key??t?.type??t?.slug??t??i,e))).filter(Boolean);if("object"==typeof t)return Object.entries(t).map((([t,i])=>normalizeEntry(i,t,e))).filter(Boolean);if("string"==typeof t){const i=normalizeEntry(t,t,e);return i?[i]:[]}return[]}function normalizeEntry(t,e,{translationPrefix:i,stringIsTranslation:n}={}){if(null==t)return null;let s,r,l,a;if("object"!=typeof t||Array.isArray(t)?"string"==typeof t?(s=e??t,n&&t.includes(".")?r=t:e||(s=t),!r&&!l&&n&&t.includes(".")&&(r=t),l||n||(l=t)):s=e:(s=t.id??t.key??t.type??t.slug??t.value??t.name??e,r=t.translationKey??t.labelKey??t.i18n??null,l=t.label??t.name??t.title??t.display??t.text??null,a=t.path??t.dataPath??null),!s&&0!==s)return null;const o="string"==typeof s?s:String(s),c=sanitizeId(o);return!r&&i&&(r=buildTranslationKey(i,o)),{id:c,actorKey:o,translationKey:r,label:l,path:a}}function buildTranslationKey(t,e){if(!t||null==e)return null;return`${t}.${String(e).replace(/\s+/g,"_").replace(/-/g,"_").toLowerCase()}`}function dedupeEntries(t){const e=new Map;for(const i of t)i?.id&&(e.has(i.id)||e.set(i.id,i));return[...e.values()]}function getProperty(t,e){if(!t||!e)return;const i=e.split(".");let n=t;for(const t of i){if(null==n)return;n=n[t]}return n}function createActionHandlerClass(t){return class ActionHandler extends t.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.displayUnequipped=Utils.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.Utils.sortItemsByName(e),this.items=e,this.inventoryGroups=this.#i(getInventoryGroupEntries());const i=getTechniqueTypeEntries();this.techniqueGroups=this.#i(i),this.techniqueTypeKeys=new Set(i.flatMap((t=>[t.actorKey??t.id,t.id])))}"character"===this.actorType||"npc"===this.actorType?await this.#n():this.actor||this.#s()}async#n(){await Promise.all([this.#r(),this.#l()]),this.#a(),this.#o(),this.#c(),this.#u()}#s(){if(0===(Array.isArray(this.tokens)?this.tokens:[]).length)return;const e=Array.isArray(this.actors)?this.actors.filter((t=>!!t)):[],i=[],n=t.Utils.i18n?.("tokenActionHud.utility")??game.i18n.localize?.("tokenActionHud.utility")??"Utility",s=t.Utils.i18n?.("tokenActionHud.utility.endTurn")??game.i18n.localize?.("tokenActionHud.utility.endTurn")??"End Turn";if(i.push({id:"endTurn",name:s,encodedValue:["utility","endTurn"].join(this.delimiter),listName:`${n}: ${s}`}),i.length>0){const t={id:"utility",name:n,type:"system"};this.addActions(i,t)}if(0===e.length)return;const r=e[0];if(!r)return;const l=Object.values(game.l5r5e?.HelpersL5r5e?.getRingsList?.(r)??{});if(0===l.length)return;const a=new Set(e.map((t=>t?.system?.stance)).filter((t=>"string"==typeof t))),o=l.map((i=>{try{const n=i.id;if(!n)return null;const s=["ring",n].join(this.delimiter),r=t.Utils.i18n?.(`l5r5e.rings.${n}`)??i.label??n,l=e.map((t=>t?.system?.rings?.[n]?.value)).filter((t=>null!=t));let o=r;if(l.length===e.length&&l.length>0){const t=[...new Set(l)];o=1===t.length?`${r}: ${t[0]}`:`${r}: ${t.join("/")}`}else void 0!==i?.value&&(o=`${r}: ${i.value}`);let c="";1===a.size&&a.has(n)&&(c="toggle active");const u=t.Utils.i18n?.(`l5r5e.conflict.stances.${n}tip`)??"",d=t.Utils.getImage?.(`systems/l5r5e/assets/icons/rings/${n}.svg`),p=l.length?l.join("/"):"";return{id:n,name:o,img:d,encodedValue:s,cssClass:c,tooltip:u,listName:p?`${r}: ${p}`:r}}catch(e){return t.Logger?.error?.(e),null}})).filter((t=>!!t));if(0===o.length)return;const c={id:"rings",name:t.Utils.i18n?.("l5r5e.rings.title")??"rings",type:"system"};this.addActions(o,c)}async#r(){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){const n=i.system.equipped,s=i.system?.quantity>0,r=this.#d(i),l=i.type;s&&(n&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,i)),n||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,i)),r&&("item"===l&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,i)),"weapon"===l&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,i)),"armor"===l&&(t.has("armor")||t.set("armor",new Map),t.get("armor").set(e,i))))}const e=this.inventoryGroups?[...this.inventoryGroups.keys()]:[],i=[...t.keys()],n=[...new Set([...e,...i])];for(const e of n){const i=t.get(e);if(!i||0===i.size)continue;const n=this.#p(e,this.inventoryGroups);await this.#y(i,n,e)}}#a(){const e="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const n=this.actor.system.stance,s={id:"rings",name:`${t.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},r=Object.values(i).map((i=>{try{const s=i.id,r=[e,s].join(this.delimiter),l=`${t.Utils.i18n(`l5r5e.rings.${s}`)}: ${i.value}`??"",a=`${`${i.label}:`??""}${l}`,o=t.Utils.getImage(`systems/l5r5e/assets/icons/rings/${s}.svg`),c=`${t.Utils.i18n(`l5r5e.conflict.stances.${s}tip`)}`;let u="";return s===n&&(u="toggle active"),{id:s,name:l,img:o,encodedValue:r,cssClass:u,tooltip:c,listName:a}}catch(e){return t.Logger.error(i),null}})).filter((t=>!!t));this.addActions(r,s)}#u(){if(!["character","npc"].includes(this.actorType))return;const e="skill",i=this.#g();for(const n of i){const i=n.id;try{const s={id:i,name:n.label,type:"system"},r=n.skills.map((s=>{const r=[e,s].join(this.delimiter),l=this.#m(i,s),a=n.skillLabels instanceof Map?n.skillLabels.get(s)??n.skillLabels.get(String(s)):n.skillLabels?.[s]??n.skillLabels?.[String(s)],o=this.#f(i,s,a),c=""!==l&&null!=l?`${o}: ${l}`:o;return{id:s,name:c,encodedValue:r,listName:`${`${t.Utils.i18n("l5r5e.skills.label")}: `??""}${c}`}}));this.addActions(r,s)}catch(e){return t.Logger.error(i),null}}}#g(){const t=game.l5r5e?.HelpersL5r5e??{},e="npc"===this.actorType?this.#h(t,!0):this.#h(t,!1);return this.#k(e).map((t=>{if(!t||!t.id||!t.skills||0===t.skills.length)return null;const e=this.#b(t.id,t.label);return{id:t.id,label:e,skills:t.skills,skillLabels:t.skillLabels}})).filter((t=>t&&t.skills.length>0))}#k(t){if(!t)return[];const e=[],addEntry=(t,i)=>{const n=this.#A(t,i);n&&n.id&&e.push(n)};if(t instanceof Map){for(const[e,i]of t.entries())addEntry(i,e);return e}return Array.isArray(t)?(t.forEach(((t,e)=>addEntry(t,e))),e):"object"==typeof t?(Object.entries(t).forEach((([t,e])=>addEntry(e,t))),e):[]}#A(t,e){if(null==t)return null;const i="string"==typeof e||"number"==typeof e?String(e):void 0;if(Array.isArray(t)&&t.length>0){if(t.length>=2){const[e,n,s]=t,{ids:r,labels:l}=this.#v(n);return{id:"string"==typeof e||"number"==typeof e?String(e):i,label:"string"==typeof s?s:t.label??t.name??null,skills:r,skillLabels:l}}const{ids:e,labels:n}=this.#v(t);return{id:i,label:t.label??t.name??null,skills:e,skillLabels:n}}if(t instanceof Set||t instanceof Map){const{ids:e,labels:n}=this.#v(t);return{id:i,label:t.label??t.name??t.title??null,skills:e,skillLabels:n}}if("object"==typeof t){const e="string"==typeof t.id||"number"==typeof t.id?String(t.id):"string"==typeof t.key||"number"==typeof t.key?String(t.key):"string"==typeof t.category||"number"==typeof t.category?String(t.category):"string"==typeof t.type||"number"==typeof t.type?String(t.type):i,n=t.label??t.name??t.title??t.categoryLabel??t.categoryName??null,s=t.skills??t.skillIds??t.skill_ids??t.skillList??t.skill_list??t.skillGroups??t.skill_groups??t.values??t.entries??t.list??t.items??t.data??t.set??t.group,{ids:r,labels:l}=this.#v(s??t);return{id:e,label:n,skills:r,skillLabels:l}}if("string"==typeof t||"number"==typeof t){const{ids:e,labels:n}=this.#v([t]);return{id:i??(1===e.length?e[0]:String(t)),label:null,skills:e,skillLabels:n}}return null}#v(t){const e=[],i=new Map,addSkill=(t,n)=>{if(null==t)return;const s=String(t);s&&(e.push(s),n&&!i.has(s)&&i.set(s,String(n)))},visit=(t,e)=>{if(null!=t)if(t instanceof Set)t.forEach((t=>visit(t)));else if(t instanceof Map)for(const[e,i]of t.entries())if("object"==typeof i&&null!==i){const t=i.id??i.key??i.skill??i.slug??i.value??e,n=i.label??i.name??i.title??null;void 0!==t&&addSkill(t,n),visit(i.skills??i.skill??i.values??i.entries??i.list??i.items,null)}else visit(i,e);else if(Array.isArray(t))t.forEach((t=>{if(Array.isArray(t))visit(t);else if("object"==typeof t&&null!==t){const i=t.id??t.key??t.skill??t.slug??t.value??t.default??t.primary??e,n=t.label??t.name??t.title??t.displayName??null;void 0!==i&&addSkill(i,n);const s=t.skills??t.skill??t.values??t.entries??t.list??t.items;s&&visit(s)}else visit(t)}));else if("object"!=typeof t)"string"!=typeof t&&"number"!=typeof t||addSkill(t);else{const i=t.id??t.key??t.skill??t.slug??t.value??t.default??t.primary??e,n=t.label??t.name??t.title??t.displayName??null;void 0!==i&&addSkill(i,n);const s=["skill","skills","ids","id","keys","key","values","value","default","primary","entries","list","items","options","choices"];for(const e of s)void 0!==t[e]&&visit(t[e])}};return visit(t),{ids:this.#I(e),labels:i}}#S(t){return t?t instanceof Map?this.#I([...t.values()]):Array.isArray(t)?this.#I(t.flatMap((t=>this.#S(t)))):"string"==typeof t?this.#I([t]):"object"==typeof t?t.id?this.#S(t.id):t.key?this.#S(t.key):t.value?this.#S(t.value):t.default?this.#S(t.default):t.skills?this.#S(t.skills):t.entries?this.#S(t.entries):t.list?this.#S(t.list):t.items?this.#S(t.items):this.#I(Object.values(t).flatMap((t=>this.#S(t)))):[]:[]}#I(t){return[...new Set(t.map((t=>null==t?"":String(t))).filter((t=>t)))]}#b(t,e){if(e)return e;const i=game.l5r5e?.HelpersL5r5e,n=["getSkillCategoryLabel","getNpcSkillCategoryLabel"];for(const e of n){const n=i?.[e];if("function"==typeof n)try{const e=n.call(i,t,this.actor);if(e)return e}catch(t){continue}}const s=CONFIG?.l5r5e??{},r=s?.npc?.skills?.[t]??s?.skills?.[t];if(r){const t=r.label??r.name??r.title;if(t)return t}const l=[`l5r5e.npc.skills.${t}.title`,`l5r5e.skills.${t}.title`,`l5r5e.skills.${t}`,t];return this.#q(l)}#f(t,e,i){if(i)return i;const n=game.l5r5e?.HelpersL5r5e,s=[["getNpcSkillLabel",[t,e]],["getNpcSkillLabel",[e]],["getSkillLabel",[t,e]],["getSkillLabel",[e]],["getSkillName",[e]],["getSkillNameFromId",[e]]];for(const[t,e]of s){const i=n?.[t];if("function"==typeof i)try{const t=i.apply(n,e);if(t)return t}catch(t){continue}}const r=CONFIG?.l5r5e??{},l=r?.npc?.skills?.[t]?.[e]??r?.skills?.[t]?.[e]??r?.skills?.[e];if(l){const t=l.label??l.name??l.title;if(t)return t}const a=[`l5r5e.npc.skills.${t}.${e}`,`l5r5e.skills.${t}.${e}`,`l5r5e.skills.${e}`,`l5r5e.skill.${e}`,e];return this.#q(a)}#m(t,e){const i=[this.actor?.system?.skills,this.actor?.system?.npcSkills,this.actor?.system?.npc?.skills,this.actor?.system?.npc?.skillCategories,this.actor?.system?.npc?.skill_categories,this.actor?.system?.npc?.skillGroups,this.actor?.system?.npc?.skill_groups,this.actor?.system?.skillRanks,this.actor?.system?.skillGroups,this.actor?.system?.skill_groups];for(const n of i){const i=n?.[t];if(!i)continue;const s=i?.[e],r=this.#H(s);if(null!=r)return r}const n=this.actor?.system?.skills?.[e],s=this.#H(n);return null!=s?s:""}#h(t,e=!1){const i=this.actor,n=e?["getNpcSkillCategoriesList","getNpcSkillCategories","getNpcSkillsCategoriesList","getNpcSkillsCategories","getNpcSkillsList","getNpcSkills","getNpcSkillGroupsList","getNpcSkillGroups"]:["getCategoriesSkillsList","getSkillCategoriesList","getSkillsCategoriesList","getSkillsList","getSkillCategories"],s=Object.keys(t??{}).filter((t=>{const i=t.toLowerCase();return!!i.includes("skill")&&(!(e&&!i.includes("npc"))&&(!(!e&&i.includes("npc"))&&(i.includes("list")||i.includes("categor")||i.includes("group"))))})),r=new Set,l=[...n,...s];for(const e of l){if(r.has(e))continue;r.add(e);const n=t?.[e],s=this.#w(n,t,i);if(s)return s}const a=e?["system.npc.skills","system.npcSkills","system.skills","system.npc.skillCategories","system.npc.skill_categories","system.npc.skillGroups","system.npc.skill_groups"]:["system.skills","system.skillCategories","system.skill_categories","system.skillGroups","system.skill_groups"];for(const t of a){const e=this.#C(i,t);if(e)return e}return e?i?.system?.npcSkills??i?.system?.skills:i?.system?.skills}#w(t,e,i){if("function"!=typeof t)return null;const n=[[i],[i,{actor:i}],[]];for(const i of n)try{const n=t.apply(e,i);if(n)return n}catch(t){continue}return null}#H(t){if(null==t)return null;if("number"==typeof t||"string"==typeof t)return t;if("object"==typeof t)for(const e of["value","rank","dice","level","rating"])if(void 0!==t[e])return t[e];return null}#q(e){for(const i of e){if(!i)continue;const e=t.Utils.i18n(i);if(e&&e!==i)return e}return e[e.length-1]??""}async#l(t){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){if(this.#$(i)){const n=sanitizeId(i.system.technique_type);if(!n)continue;e.has(n)||e.set(n,new Map),e.get(n).set(t,i)}}const i=this.techniqueGroups?[...this.techniqueGroups.keys()]:[],n=[...e.keys()],s=[...new Set([...i,...n])];for(const t of s){const i=e.get(t);if(!i||0===i.size)continue;const n=this.#p(t,this.techniqueGroups,{fallbackPrefix:"l5r5e.techniques"});await this.#y(i,n,"technique")}}#t(){const e=["character","npc"],i=t.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return i.every((t=>e.includes(t.type)))?i:[]}#e(){const e=["character","npc"],i=t.Utils.getControlledTokens(),n=i?.filter((t=>t.actor)).map((t=>t.actor));return n.every((t=>e.includes(t.type)))?i:[]}#d(t){const e=t.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(e))return!0;return!!t.system.equipped}#$(t){if("technique"!==t.type)return!1;if(!this.techniqueTypeKeys||0===this.techniqueTypeKeys.size)return!0;const e=t.system.technique_type;return!!e&&(this.techniqueTypeKeys.has(e)||this.techniqueTypeKeys.has(sanitizeId(e)))}#o(){this.#x("derived")}#c(){this.#x("standing")}#x(t){if(!this.actor)return;const{entries:e,section:i}=getAttributeEntries(t,this.actor);if(0===e.length)return;const n=e.map((e=>this.#T(e,i,t))).filter((t=>!!t));if(0===n.length)return;const s=this.#L(t);this.addActions(n,s)}#T(e,i,r){const l=this.#_(i,e,r);if(void 0===l)return null;const a=this.#U(l),o=""!==a,c=this.#M(e,r),u=o?`${c}: ${a}`:c,d=t.Utils.i18n(n[r]??s?.[r]?.name??""),p=d?`${d}: ${u}`:u,y=[r,e.actorKey??e.id].join(this.delimiter),g={id:e.id,name:u,encodedValue:y,listName:p};return o&&(g.info1={text:a}),g}#_(t,e,i){const n=this.#j(t,i),s=[];e.path&&s.push(e.path);[e.actorKey,e.id].forEach((t=>{t&&(s.push(t),s.push(String(t).replace(/-/g,"_")))}));for(const t of n)for(const e of s){const i=this.#C(t,e);if(void 0!==i)return i}}#j(t,e){const i=[];t&&"object"==typeof t&&i.push(t);const n=this.actor?.system??{},s="standing"===e?["standing","social","attributes.standing","attributes.social"]:["derived","derivedAttributes","attributes.derived","attributes.derivedAttributes"];for(const t of s){const e=this.#C(n,t);e&&"object"==typeof e&&!i.includes(e)&&i.push(e)}return n&&"object"==typeof n&&!i.includes(n)&&i.push(n),i}#U(t){if(null==t)return"";if("number"==typeof t||"string"==typeof t)return String(t);const e=this.#E(t.value,t.current,t.rank,t.score,t.points,t.amount,t.total),i=this.#E(t.max,t.maximum,t.cap,t.limit,t.maxValue,t.maximumValue);if(void 0!==e&&void 0!==i)return`${e}/${i}`;if(void 0!==e)return String(e);if(void 0!==t.current&&void 0!==t.max)return`${t.current}/${t.max}`;if(void 0!==t.current)return String(t.current);if(void 0!==t.rank&&void 0!==t.cap)return`${t.rank}/${t.cap}`;if(void 0!==t.rank)return String(t.rank);const n=Object.values(t).filter((t=>"number"==typeof t));return 1===n.length?String(n[0]):n.length>1?n.join("/"):""}#M(e,i){const n=e.translationKey;if(n)return t.Utils.i18n(n);if(e.label)return t.Utils.i18n(e.label);const s="standing"===i?"l5r5e.social":"l5r5e.attributes",r=e.actorKey??e.id;if(r){const e=`${s}.${String(r).replace(/-/g,"_").toLowerCase()}`;return t.Utils.i18n(e)}return e.id}#p(e,i,{fallbackPrefix:n}={}){const r=i?.get(e);let l=r?.translationKey,a=r?.label;if(!l&&n){l=`${n}.${String(r?.actorKey??e).replace(/-/g,"_").toLowerCase()}`}const o=s?.[e]?.name;return{id:e,name:l?t.Utils.i18n(l):a?t.Utils.i18n(a):o?t.Utils.i18n(o):this.#P(e),type:"system"}}#L(e){const i=e,n=s?.[i]?.name;return{id:i,name:n?t.Utils.i18n(n):i,type:"system"}}#E(...t){return t.find((t=>null!=t))}#C(t,e){if(!t||!e)return;if(Object.hasOwn(t,e))return t[e];const i=String(e).split(".");let n=t;for(const t of i){if(null==n)return;n=n[t]}return n}#i(t){return new Map(t.map((t=>[t.id,t])))}#P(t){return String(t??"").split(/[-_]/).filter((t=>t.length>0)).map((t=>t.charAt(0).toUpperCase()+t.slice(1))).join(" ")}async#y(t,e,i="item"){if(0===t.size)return;if(!("string"==typeof e?e:e?.id))return;const n=await Promise.all([...t].map((async t=>await this.#z(i,t[1]))));this.addActions(n,e)}async#z(e,i){const s=i.id??i._id;let r=i?.name??i?.label;const l=`${`${t.Utils.i18n(n[e])}: `??""}${r}`;let a="";if(Object.hasOwn(i.system,"readied")){a=`toggle${i.system.readied?" active":""}`}const o=[e,s].join(this.delimiter),c=t.Utils.getImage(i),u=this.#K(i?.system?.activation?.type);let d=this.#D(i);const p=d?.info1,y=d?.info2,g=d?.info3,m=await this.#N(i);return{id:s,name:r,encodedValue:o,cssClass:a,img:c,icon1:u,icon2:null,info1:p,info2:y,info3:g,listName:l,tooltip:await this.#G(m)}}#K(t){}#D(t){return{info1:{text:this.#R(t)},info2:{text:this.#O(t)},info3:{text:this.#B(t)}}}#R(t){const e=t?.system?.quantity??0;return e>1?e:""}#O(t){const e=t?.system?.uses;return e&&(e.value>0||e.max>0)?`${e.value??"0"}${e.max>0?`/${e.max}`:""}`:""}#B(t){const e=t?.system?.consume?.target,i=t?.system?.consume?.type;if(e===t.id)return"";if("attribute"===i){if(!e)return"";const t=e.substr(0,e.lastIndexOf(".")),i=this.actor.system[t];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const n=this.items.get(e);if("charges"===i){const t=n?.system.uses;return t?.value?`${t.value}${t.max?`/${t.max}`:""}`:""}return n?.system?.quantity??""}async#N(t){if("none"===this.tooltipsSetting)return"";const e=t?.name??"";if("nameOnly"===this.tooltipsSetting)return e;const i="string"==typeof t?.system?.description?t?.system?.description:t?.system?.description?.value??"",n=t?.modifiers??null,s=[...t?.system?.chatProperties??[],...t?.system?.equippableItemCardProperties??[],...t?.system?.activatedEffectCardProperties??[]].filter(Boolean),r=t?.type;return{name:e,type:r,description:i,modifiers:n,properties:s,rarity:t?.system?.rarity?.value??t?.system?.rarity??null,traits:this.#V(t?.system?.properties),patterns:this.#F(t?.system?.patterns),tags:this.#W(t?.system?.tags),bonuses:this.#Q(t?.system?.bonuses),range:"weapon"===r?t?.system?.range?.value??t?.system?.range:null,damage:"weapon"===r?t?.system?.damage?.value??t?.system?.damage:null,deadliness:"weapon"===r?t?.system?.deadliness?.value??t?.system?.deadliness:null,grip1:"weapon"===r?t?.system?.grip_1?.value??t?.system?.grip_1:null,grip2:"weapon"===r?t?.system?.grip_2?.value??t?.system?.grip_2:null,physical:"armor"===r?t?.system?.armor?.physical?.value??t?.system?.armor?.physical:null,supernatural:"armor"===r?t?.system?.armor?.supernatural?.value??t?.system?.armor?.supernatural:null}}#V(e){const i=this.#Z(e);if(!i.length)return null;const n=i.map((e=>{if(!e)return null;const i="object"==typeof e?e:{id:e},n=this.#J(i?.id??i?.key??i?.slug??i?.name);if(!n)return null;if(!(!1!==(i?.active??i?.enabled??i?.value??!0)))return null;const s=a[n],r=i?.label??i?.name??this.#X(n);if(!s&&!r)return null;if(!s)return r;const l=t.Utils.i18n(s);return l&&l!==s?l:r??s})).filter(Boolean);return n.length?n:null}async#G(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const i=t.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return i;const n=`<h3>${i}</h3>`,s=e?.descriptionLocalised??await TextEditor.enrichHTML(t.Utils.i18n(e?.description??""),{async:!0}),r=e?.traits?.length?`<div class="tah-properties">${e.traits.map((t=>`<span class="tah-property">${t}</span>`)).join("")}</div>`:"",l=[e?.rarity?[{label:"tokenActionHud.l5r5e.tooltip.rarity",value:e.rarity,class:this.#Y(e.rarity)}]:[],"weapon"===e.type?this.#tt(e):[],"weapon"===e.type?this.#et(e):[],"armor"===e.type?this.#it(e):[],e.patterns??[],e.tags??[],e.bonuses??[]].flat(),a=this.#nt(l);return s||a?`<div>${n}${a?`<div class="tah-tags-wrapper">${a??""}</div>`:""}${s}${r}</div>`:i}#Y(t){return t?t<3?"common":t<5?"uncommon":t<7?"rare":t<9?"veryRare":9==t?"legendary":10==t?"artifact":void 0:""}#tt(t){return[t.range?{label:"l5r5e.weapons.range",value:t.range}:null,t.damage?{label:"l5r5e.weapons.damage",value:t.damage}:null,t.deadliness?{label:"l5r5e.weapons.deadliness",value:t.deadliness}:null].filter(Boolean)}#et(t){return[t.grip1&&"N/A"!==t.grip1?{label:"l5r5e.weapons.1hand",value:t.grip1}:null,t.grip2&&"N/A"!==t.grip2?{label:"l5r5e.weapons.2hand",value:t.grip2}:null].filter(Boolean)}#it(t){return[t?.physical&&t?.physical>0?{label:"l5r5e.armors.physical",value:t?.physical}:null,t?.supernatural&&t?.supernatural>0?{label:"l5r5e.armors.supernatural",value:t?.supernatural}:null].filter(Boolean)}#F(t){const e=this.#Z(t);if(!e.length)return null;const i=c.pattern??c.default,n=i?.icon??c.default?.icon,s=i?.class??c.default?.class,r=e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},i=this.#J(e?.id??e?.key??e?.slug??e?.name);if(!i)return null;if(!(!1!==(e?.active??e?.enabled??e?.value??!0)))return null;const r=o[i],l=e?.label??e?.name??this.#X(i);return r||l?{label:r??l,localized:!r&&Boolean(l),fallback:l,icon:n,class:s}:null})).filter(Boolean);return r.length?r:null}#W(t){const e=this.#Z(t);if(!e.length)return null;const i=e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},i=this.#J(e?.id??e?.key??e?.slug??e?.type??e?.name);if(!i)return null;if(!(!1!==(e?.active??e?.enabled??e?.value??!0)))return null;const n=c[i]??c.default,s=n?.label??(i?`tokenActionHud.l5r5e.tags.${i}`:null),r=e?.label??e?.name??this.#X(i),l=e?.amount??e?.rating??e?.value,a="number"==typeof l||"string"==typeof l?l:void 0;return s||r?{label:s??r,localized:!s&&Boolean(r),fallback:r,value:a,icon:n?.icon??c.default?.icon,class:n?.class??c.default?.class}:null})).filter(Boolean);return i.length?i:null}#Q(t){const e=this.#Z(t);if(!e.length)return null;const i=c.bonus??c.default,n=e.map((t=>{if(!t)return null;const e="object"==typeof t?t:{id:t},n=this.#J(e?.id??e?.key??e?.slug??e?.type??e?.name);if(!n)return null;if(!(!1!==(e?.active??e?.enabled??!0)))return null;const s=u[n]??i,r=s?.label??(n?`tokenActionHud.l5r5e.bonuses.${n}`:null),l=e?.label??e?.name??this.#X(n),a=e?.value??e?.amount??e?.bonus??e?.rating,o="number"==typeof a||"string"==typeof a?a:void 0;return r||l||void 0!==o?{label:r??l,localized:!r&&Boolean(l),fallback:l,value:o,icon:s?.icon??i?.icon,class:s?.class??i?.class}:null})).filter(Boolean);return n.length?n:null}#nt(t){if(!t||0===t.length)return"";const e=t.map((t=>this.#st(t))).filter(Boolean).join("");return e?`<div class="tah-tags">${e}</div>`:""}#st(e){if(!e)return"";const i=["tah-tag"];e.class&&i.push(e.class);const n=i.filter(Boolean).join(" "),s=e.icon?`<i class="${e.icon}" aria-hidden="true"></i>`:"";if(e.text)return`<span class="${n}">${s}${s?`<span class="tah-tag-text">${e.text}</span>`:e.text}</span>`;const r=e.label??"";let l="";if(e.localized?l=r:r&&(l=t.Utils.i18n(r),e.fallback&&l===r&&(l=e.fallback)),l||(l=e.fallback??""),!l)return"";const a=void 0!==e.value&&null!==e.value&&""!==e.value?`${l}: ${e.value}`:l;return`<span class="${n}"${e.title?` title="${e.title}"`:""}>${s?`${s}<span class="tah-tag-text">${a}</span>`:a}</span>`}#Z(t){return t?Array.isArray(t)?t.filter((t=>null!=t)):t instanceof Map?Array.from(t.entries()).map((([t,e])=>"object"==typeof e&&null!==e?{id:t,...e}:{id:t,value:e})):t instanceof Set?[...t]:"object"==typeof t?Object.entries(t).map((([t,e])=>"object"==typeof e&&null!==e?{id:t,...e}:{id:t,value:e})):[t]:[]}#J(t){if(null==t)return"";return("string"==typeof t?t:String(t)).trim().replace(/\s+/g,"_").replace(/[A-Z]/g,(t=>`_${t.toLowerCase()}`)).replace(/[-]+/g,"_").replace(/__+/g,"_").replace(/^_+|_+$/g,"")}#X(t){return t&&"string"==typeof t?t.replace(/[-_]/g," ").replace(/\s+/g," ").trim().replace(/\b\w/g,(t=>t.toUpperCase())):""}}}function getCoreModule(){const t=game.modules.get(e.ID);if(!t)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return t}function getCoreApi(){const t=getCoreModule();if(!t.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return t.api}let g=null;function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}function createRollHandlerClass(t){return class RollHandler extends t.RollHandler{async handleActionClick(t,e){const[i,n]=e.split("|"),s="function"==typeof this.isRenderItem&&this.isRenderItem(t),r=s||"contextmenu"===t?.type||2===t?.button||2===t?.data?.button||!0===t?.data?.isRightClick;if(["item","weapons","technique","armor"].includes(i)&&s)return this.doRenderItem(this.actor,n);if(["ring"].includes(i)&&r&&"ring"===i)return void await this.#rt(t,this.actor,n);const l=["character"];if(this.actor)return void await this.#lt(t,this.actor,this.token,i,n);const a=canvas.tokens.controlled.filter((t=>l.includes(t.actor?.type)));for(const e of a){const s=e.actor;await this.#lt(t,s,e,i,n)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#lt(t,e,i,n,s){switch(n){case"weapons":this.#at(t,e,i,s);break;case"ring":this.#ot(t,e,i,s);break;case"skill":this.#ct(t,e,i,s);break;case"technique":this.#ut(t,e,i,s);break;case"armor":case"equipment":await this.#dt(t,e,s,i);break;case"utility":this.#pt(i,s)}}async#dt(t,e,i,n){const s=e.items.get(i);if(!s)return;const r=game.l5r5e??{},l=r.HelpersL5r5e??{},a=r.Chat??r.chat??{},o=r.applications?.chat??r.apps?.chat??{},c=r.ChatMessage??{},u="function"==typeof ChatMessage?.getSpeaker?ChatMessage.getSpeaker({actor:e,token:n}):{actor:e?.id,token:n?.id},d={actor:e,token:n,speaker:u,item:s,source:"token-action-hud"},p=[{fn:l.sendItemToChat,context:l},{fn:l.sendToChat,context:l},{fn:l.displayItem,context:l},{fn:a.sendItemToChat,context:a},{fn:a.displayItem,context:a},{fn:a.createItemMessage,context:a},{fn:a.showItemCard,context:a},{fn:a.renderItemCard,context:a},{fn:o.sendItemToChat,context:o},{fn:o.displayItem,context:o},{fn:o.renderItemCard,context:o},{fn:c.createItemMessage,context:c},{fn:c.sendItemToChat,context:c},{fn:r.ChatV2?.createItemMessage,context:r.ChatV2},{fn:s?.sendToChat,context:s},{fn:s?.displayCard,context:s},{fn:s?.showItemCard,context:s},{fn:s?.toMessage,context:s}].filter((t=>"function"==typeof t?.fn));for(const t of p)try{const{fn:i,context:r}=t,l="number"==typeof i.length?i.length:1;let a;if(r===s&&i===s?.toMessage){const t={speaker:u};a=await i.call(r,t,{create:!0})}else a=r===s?l<=0?await i.call(r):1===l?await i.call(r,d):await i.call(r,d,{create:!0}):l<=1?await i.call(r,s):2===l?await i.call(r,s,d):await i.call(r,s,d,{actor:e,token:n});if(!1!==a)return}catch(t){continue}"function"==typeof ChatMessage?.create?await ChatMessage.create({speaker:ChatMessage.getSpeaker({actor:e}),content:game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name})}):ui.notifications?.warn(game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name}))}async#rt(t,e,i){const n=["character","npc"],s=Object.keys(CONFIG.l5r5e?.conflict?.stances??{});if(s.length>0&&!s.includes(i))return;const r=e?[e]:canvas.tokens.controlled.map((t=>t.actor)).filter((t=>t&&n.includes(t.type)));if(r&&0!==r.length)for(const t of r)if(n.includes(t.type)&&t.system?.stance!==i&&t.canUserModify?.(game.user,"update"))try{await t.update({"system.stance":i})}catch(t){console.error(t)}}#at(t,e,i,n){const s=e.items.get(n);if(!s)return;const r=this.#yt(s?.system?.skill),l=this.#gt(s?.system?.ring),a={item:s,itemId:s.id,sourceId:s.id,type:s.type,itemType:s.type,title:s.name,difficulty:s?.system?.tn??s?.system?.difficulty??null,context:"token-action-hud"};null!==a.difficulty&&void 0!==a.difficulty&&(a.tn=a.tn??a.difficulty,a.targetNumber=a.targetNumber??a.difficulty),r.length>0&&(a.skill=r[0],a.skillId=r[0],a.skills=r,a.skillsList=r),l&&(a.ring=l,a.ringId=l),this.#mt(e,a,i)}#ot(t,e,i,n){const s={ring:n,ringId:n,context:"token-action-hud"};this.#mt(e,s,i)}#ct(t,e,i,n){const s={skill:n,skillId:n,context:"token-action-hud"};this.#mt(e,s,i)}#ut(t,e,i,n){const s=e.items.get(n);if(!s||"technique"!==s.type||!s.system.skill)return;const r=this.#yt(s?.system?.skill),l=this.#gt(s?.system?.ring),a=s?.system?.difficulty??s?.system?.tn??null,o={item:s,itemId:s.id,sourceId:s.id,type:s.type,itemType:s.type,title:s.name,difficulty:a,context:"token-action-hud"};null!=a&&(o.tn=o.tn??a,o.targetNumber=o.targetNumber??a),r.length>0&&(o.skill=r[0],o.skillId=r[0],o.skills=r,o.skillsList=r),l&&(o.ring=l,o.ringId=l),this.#mt(e,o,i)}#mt(t,e={},i){const n=game?.l5r5e?.DicePickerDialog;if(!n)return;const s={...e};t&&!s.actor&&(s.actor=t),t?.id&&!s.actorId&&(s.actorId=t.id),t?.uuid&&!s.actorUuid&&(s.actorUuid=t.uuid),t?.type&&!s.actorType&&(s.actorType=t.type),i&&!s.token&&(s.token=i);const r=i?.document??i;r?.id&&!s.tokenId&&(s.tokenId=r.id),r?.uuid&&!s.tokenUuid&&(s.tokenUuid=r.uuid),r?.scene?.id&&!s.sceneId&&(s.sceneId=r.scene.id),r?.scene?.uuid&&!s.sceneUuid&&(s.sceneUuid=r.scene.uuid),s.item&&!s.itemId&&(s.itemId=s.item.id),s.item&&!s.sourceId&&(s.sourceId=s.sourceId??s.item.id),s.item&&!s.itemType&&(s.itemType=s.item.type),s.item?.uuid&&!s.itemUuid&&(s.itemUuid=s.item.uuid),s.item&&!s.title&&(s.title=s.item.name);const l=this.#ft([s.skill,s.skillId,...Array.isArray(s.skills)?s.skills:[],...Array.isArray(s.skillsList)?s.skillsList:[]]);l.length>0&&(s.skill=l[0],s.skillId=l[0],s.skills=l,s.skillsList=l);const a=this.#gt(s.ring??s.ringId??s.ringKey);a&&(s.ring=a,s.ringId=a,s.ringKey=a),s.context||(s.context="token-action-hud"),null!==s.difficulty&&void 0!==s.difficulty&&(s.tn=s.tn??s.difficulty,s.targetNumber=s.targetNumber??s.difficulty),null!==s.tn&&void 0!==s.tn&&(s.difficulty=s.difficulty??s.tn,s.targetNumber=s.targetNumber??s.tn),null!==s.targetNumber&&void 0!==s.targetNumber&&(s.difficulty=s.difficulty??s.targetNumber,s.tn=s.tn??s.targetNumber);const o=l[0],c=s.targetNumber??s.tn??s.difficulty??null,u={};o&&(u.skill=o,u.skillId=o,u.skillKey=o),a&&(u.ring=a,u.ringId=a,u.ringKey=a),null!=c&&(u.tn=c,u.difficulty=c,u.targetNumber=c),s.action=s.action?{...u,...s.action}:{...u},s.check=s.check?{...u,...s.check}:{...u},s.dicePool=s.dicePool?{...u,...s.dicePool}:{...u},s.pool=s.pool?{...u,...s.pool}:{...u};const d=[["show",[[s],[t,s],[s,t]]],["open",[[s],[t,s],[s,t]]],["create",[[s],[t,s],[s,t]]],["launch",[[s],[t,s],[s,t]]],["render",[[s]]]];for(const[t,e]of d){const i=n?.[t];if("function"==typeof i)for(const t of e)try{const e=i.apply(n,t);if(void 0!==e)return e}catch(t){continue}}const p=[];p.push([s]),p.push([t,s]),p.push([s,t]),p.push([s,{actor:t}]),p.push([{actor:t,options:s}]),s.context&&(p.push([t,s,s.context]),p.push([s,t,s.context]));const y="number"==typeof n.length?n.length:null,g=y&&y>0?p.filter((t=>t.length===y)):p;for(const t of g)try{const e=new n(...t);return"function"==typeof e?.render?e.render(!0):"function"==typeof e?.open&&e.open(s),e}catch(t){continue}const m=game.i18n?.localize?.("tokenActionHud.l5r5e.dicePickerError"),f=game.i18n?.localize?.("tokenActionHud.notifications.dicePickerError"),h=m&&"tokenActionHud.l5r5e.dicePickerError"!==m?m:f&&"tokenActionHud.notifications.dicePickerError"!==f?f:"Token Action HUD L5R5e: Unable to open Dice Picker Dialog";ui.notifications?.warn?.(h)}#gt(t){if(t)if(t instanceof Set)for(const e of t){const t=this.#gt(e);if(t)return t}else if(t instanceof Map)for(const e of t.values()){const t=this.#gt(e);if(t)return t}else{if("string"==typeof t)return t;if("number"==typeof t)return String(t);if(Array.isArray(t))for(const e of t){const t=this.#gt(e);if(t)return t}else if("object"==typeof t){const e=["ring","id","key","value","default","defaultRing"];for(const i of e)if(t[i]){const e=this.#gt(t[i]);if(e)return e}}}}#yt(t){if(!t)return[];if(t instanceof Set)return this.#ft([...t].flatMap((t=>this.#yt(t))));if(t instanceof Map)return this.#ft([...t.values()].flatMap((t=>this.#yt(t))));if(Array.isArray(t))return this.#ft(t.flatMap((t=>this.#yt(t))));if("string"==typeof t)return[t];if("number"==typeof t)return[String(t)];if("object"==typeof t){const e=["id","ids","skill","skills","skillId","skillIds","skill_ids","skillList","skillsList","value","values","default","primary","entry","entries","list","items"];for(const i of e)if(t[i])return this.#yt(t[i]);return this.#ft(Object.values(t).flatMap((t=>this.#yt(t))))}return[]}#ft(t){return[...new Set(t.map((t=>null==t?"":String(t))).filter((t=>t)))]}async#pt(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}function createSystemManagerClass(t){const e=createActionHandlerClass(t),i=createRollHandlerClass(t);return class SystemManager extends t.SystemManager{getActionHandler(){return new e}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new i,e}async registerDefaults(){return g}registerSettings(t){register(t)}}}Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=s,i=getTechniqueTypeEntries();i.forEach((t=>{e[t.id]?e[t.id].name||(e[t.id].name=t.translationKey??t.label??t.id):e[t.id]={id:t.id,name:t.translationKey??t.label??t.id,type:"system"}})),Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e),r=i.map((t=>({...e[t.id],nestId:`techniques_${String(t.actorKey??t.id).replace(/[^a-zA-Z0-9]+/g,"_")}`})));g={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:t.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...e.rings,nestId:"attributes_rings"},{...e.derived,nestId:"attributes_derived"},{...e.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("l5r5e.skills.title"),groups:[{...e.artisan,nestId:"skills_artisan"},{...e.martial,nestId:"skills_martial"},{...e.scholar,nestId:"skills_scholar"},{...e.social,nestId:"skills_social"},{...e.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:t.api.Utils.i18n("l5r5e.techniques.title"),groups:r},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}}));let m=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{m=class Utils{static getSetting(i,n=null){let s=n??null;try{s=game.settings.get(t.ID,i)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}return s}static async setSetting(i,n){try{n=await game.settings.set(t.ID,i,n),e.api.Logger.debug(`Setting '${i}' set to '${n}'`)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}}}})),Hooks.once("tokenActionHudCoreApiReady",(e=>{try{if("function"!=typeof e.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(e);e.registerSystem({moduleId:t.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(t){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",t)}}));export{n as ACTION_TYPE,e as CORE_MODULE,g as DEFAULTS,s as GROUP,u as ITEM_BONUS,o as ITEM_PATTERN,a as ITEM_QUALITIES,c as ITEM_TAGS,r as ITEM_TYPE,t as MODULE,i as REQUIRED_CORE_MODULE_VERSION,l as SKILL_TYPE,m as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getActorSection,getAttributeEntries,getCoreApi,getCoreModule,getInventoryGroupEntries,getTechniqueTypeEntries,register,sanitizeId,unsanitizeId};
