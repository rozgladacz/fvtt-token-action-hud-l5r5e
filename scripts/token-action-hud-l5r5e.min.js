const e={ID:"token-action-hud-l5r5e"},t={ID:"token-action-hud-core"},i="2.0.12",s={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},n={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},a={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},r={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},o={razor_edged:"Razor-Edged",ceremonial:"Ceremonial",damaged:"Damaged",destroyed:"Destroyed",concealable:"Concealable",cumbersome:"Cumbersome",snaring:"Snaring",unholy:"Unholy",forbidden:"Forbidden",resplendent:"Resplendent",wargear:"Wargear",mundane:"Mundane",prepare:"Prepare",sacred:"Sacred",durable:"Durable",subtle:"Subtle",kenzo_blade:"Kenzō Blade"},l={jade_inlay:"Shirogane Jade Inlay",uchema:"Uchema’s Technique",yasunori:"Yasunori Steel",akodo:"Akodo Pattern",burning_water:"Burning Watter Pattern",concealment:"Concealment Pattern",deadly_fangs:"Deadly Fangs Pattern",fearsome_snarl:"Fearsome Snarl Pattern",ichiro:"Ichirō Pattern",mountain_silk:"Mountain Silk Pattern",screaming_fire:"Screaming Fire Pattern",toriyama:"Toriyama Endurance Pattern",qamarist:"Spirit of the Qamarist Pattern",yodhaniya:"Ghostlands Yodhaniya Pattern",kokejin:"Kökejin’s Heart of the Wind Pattern",agasha:"Agasha Pattern"};let c=null;function createActionHandlerClass(e){return class ActionHandler extends e.ActionHandler{async buildSystemActions(t){if(this.actors=this.actor?[this.actor]:this.#e(),this.tokens=this.token?[this.token]:this.#t(),this.actorType=this.actor?.type,this.displayUnequipped=c.getSetting("displayUnequipped"),this.actor){let t=this.actor.items;t=e.Utils.sortItemsByName(t),this.items=t}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["armor","equipment","weapons"],this.techniqueGroupIds=["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school-ability","mastery-ability","title-ability"],await this.#i()):this.actor||this.#s()}async#i(){await Promise.all([this.#n(),this.#a()]),this.#r(),this.#o()}#s(){}async#n(){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){const s=i.system.equipped,n=i.system?.quantity>0,a=this.#l(i),r=i.type;n&&(s&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,i)),s||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,i)),a&&("item"===r&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,i)),"weapon"===r&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,i)),"armor"===r&&(t.has("armor")||t.set("armor",new Map),t.get("armor").set(e,i))))}const i={equipment:e.Utils.i18n("l5r5e.items.title"),armor:e.Utils.i18n("l5r5e.armors.title"),weapons:e.Utils.i18n("l5r5e.weapons.title")};for(const e of this.inventorygroupIds){if(!t.has(e))continue;const s={id:e,name:i[e],type:"system"},n=t.get(e);await this.#c(n,s,e)}}#r(){const t="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const s=this.actor.system.stance,n={id:"rings",name:`${e.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},a=Object.values(i).map((i=>{try{const n=i.id,a=[t,n].join(this.delimiter),r=`${e.Utils.i18n(`l5r5e.rings.${n}`)}: ${i.value}`??"",o=`${`${i.label}:`??""}${r}`,l=e.Utils.getImage(`systems/l5r5e/assets/icons/rings/${n}.svg`),c=`${e.Utils.i18n(`l5r5e.conflict.stances.${n}tip`)}`;let d="";return n===s&&(d="toggle active"),{id:n,name:r,img:l,encodedValue:a,cssClass:d,tooltip:c,listName:o}}catch(t){return e.Logger.error(i),null}})).filter((e=>!!e));this.addActions(a,n)}#o(){if("character"!==this.actorType)return;const t="skill",i=game.l5r5e.HelpersL5r5e.getCategoriesSkillsList();for(const[s,n]of i)try{const i={id:s,name:`${e.Utils.i18n(`l5r5e.skills.${s}.title`)}`??s,type:"system"},a=Object.entries(n).map((i=>{const n=i[1],a=[t,n].join(this.delimiter),r=this.actor.system.skills[s][n],o=`${e.Utils.i18n(`l5r5e.skills.${s}.${n}`)}: ${r}`??"";return{id:n,name:o,encodedValue:a,listName:`${`${e.Utils.i18n("l5r5e.skills.label")}: `??""}${o}`}}));this.addActions(a,i)}catch(t){return e.Logger.error(s),null}}async#a(e){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){if(this.#d(i)){const s=String(i.system.technique_type).replace("_","-");t.has(s)||t.set(s,new Map),t.get(s).set(e,i)}}for(const e of this.techniqueGroupIds){if(!t.has(e))continue;const i={id:e,type:"system"},s=t.get(e);await this.#c(s,i,"technique")}}#e(){const t=["character","npc"],i=e.Utils.getControlledTokens()?.filter((e=>e.actor)).map((e=>e.actor));return i.every((e=>t.includes(e.type)))?i:[]}#t(){const t=["character","npc"],i=e.Utils.getControlledTokens(),s=i?.filter((e=>e.actor)).map((e=>e.actor));return s.every((e=>t.includes(e.type)))?i:[]}#l(e){const t=e.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(t))return!0;return!!e.system.equipped}#d(e){if("technique"!==e.type)return!1;return!!["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school_ability","mastery_ability","title_ability"].includes(e.system.technique_type)}async#c(e,t,i="item"){if(0===e.size)return;if(!("string"==typeof t?t:t?.id))return;const s=await Promise.all([...e].map((async e=>await this.#u(i,e[1]))));this.addActions(s,t)}async#u(t,i){const n=i.id??i._id;let a=i?.name??i?.label;const r=`${`${e.Utils.i18n(s[t])}: `??""}${a}`;let o="";if(Object.hasOwn(i.system,"readied")){o=`toggle${i.system.readied?" active":""}`}const l=[t,n].join(this.delimiter),c=e.Utils.getImage(i),d=this.#m(i?.system?.activation?.type);let u=this.#p(i);const m=u?.info1,p=u?.info2,y=u?.info3,h=await this.#y(i);return{id:n,name:a,encodedValue:l,cssClass:o,img:c,icon1:d,icon2:null,info1:m,info2:p,info3:y,listName:r,tooltip:await this.#h(h)}}#m(e){}#p(e){return{info1:{text:this.#g(e)},info2:{text:this.#k(e)},info3:{text:this.#f(e)}}}#g(e){const t=e?.system?.quantity??0;return t>1?t:""}#k(e){const t=e?.system?.uses;return t&&(t.value>0||t.max>0)?`${t.value??"0"}${t.max>0?`/${t.max}`:""}`:""}#f(e){const t=e?.system?.consume?.target,i=e?.system?.consume?.type;if(t===e.id)return"";if("attribute"===i){if(!t)return"";const e=t.substr(0,t.lastIndexOf(".")),i=this.actor.system[e];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const s=this.items.get(t);if("charges"===i){const e=s?.system.uses;return e?.value?`${e.value}${e.max?`/${e.max}`:""}`:""}return s?.system?.quantity??""}async#y(e){if("none"===this.tooltipsSetting)return"";const t=e?.name??"";if("nameOnly"===this.tooltipsSetting)return t;const i="string"==typeof e?.system?.description?e?.system?.description:e?.system?.description?.value??"",s=e?.modifiers??null,n=[...e.system?.chatProperties??[],...e.system?.equippableItemCardProperties??[],...e.system?.activatedEffectCardProperties??[]].filter((e=>e)),a=e?.type;return{name:t,type:a,description:i,modifiers:s,properties:n,rarity:e?.system?.rarity??null,traits:this.#I(e?.system?.properties),range:"weapon"===e?.type?e?.system?.range:null,damage:"weapon"===e?.type?e?.system?.damage:null,deadliness:"weapon"===e?.type?e?.system?.deadliness:null,grip1:"weapon"===e?.type?e?.system?.grip_1:null,grip2:"weapon"===e?.type?e?.system?.grip_2:null,physical:"armor"===e?.type?e?.system?.armor?.physical:null,supernatural:"armor"===e?.type?e?.system?.armor?.supernatural:null}}#I(e){return e?Object.entries(e).map((([e,t])=>t.name)):null}async#h(t){if("none"===this.tooltipsSetting)return"";if("string"==typeof t)return t;const i=e.Utils.i18n(t.name);if("nameOnly"===this.tooltipsSetting)return i;const s=`<h3>${i}</h3>`,n=t?.descriptionLocalised??await TextEditor.enrichHTML(e.Utils.i18n(t?.description??""),{async:!0}),a=t?.rarity?`<div class="tah-tags-wrapper"><span class="tah-tag ${this.#b(t.rarity)}">Rarity: ${t.rarity}</span></div>`:"",r=t?.traits?`<div class="tah-properties">${t.traits.map((e=>`<span class="tah-property">${e}</span>`)).join("")}</div>`:"",o=[a,"weapon"===t.type?this.#q(t):"","weapon"===t.type?this.#A(t):"","armor"===t.type?this.#v(t):""].join(""),l=o?`<div class="tah-tags">${o}</div>`:"";return n||l?`<div>${s}${l?`<div class="tah-tags-wrapper">${l}</div>`:""}${n}${r}</div>`:i}#b(e){return e?e<3?"common":e<5?"uncommon":e<7?"rare":e<9?"veryRare":9==e?"legendary":10==e?"artifact":void 0:""}#q(t){return[`<span class="tah-tag">${e.Utils.i18n("l5r5e.weapons.range")}: ${t.range}</span>`,`<span class="tah-tag">${e.Utils.i18n("l5r5e.weapons.damage")}: ${t.damage}</span>`,`<span class="tah-tag">${e.Utils.i18n("l5r5e.weapons.deadliness")}: ${t.deadliness}</span>`].join("")}#A(t){return[t.grip1&&"N/A"!==t.grip1?`<span class="tah-tag">${e.Utils.i18n("l5r5e.weapons.1hand")}: ${t.grip1}</span>`:"",t.grip2&&"N/A"!==t.grip2?`<span class="tah-tag">${e.Utils.i18n("l5r5e.weapons.2hand")}: ${t.grip2}</span>`:""].join("")}#v(t){return[t?.physical&&t?.physical>0?`<span class="tah-tag">${e.Utils.i18n("l5r5e.armors.physical")}: ${t?.physical}</span>`:"",t?.supernatural&&t?.supernatural>0?`<span class="tah-tag">${e.Utils.i18n("l5r5e.armors.supernatural")}: ${t?.supernatural}</span>`:""].join("")}}}function getCoreModule(){const e=game.modules.get(t.ID);if(!e)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return e}function getCoreApi(){const e=getCoreModule();if(!e.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return e.api}Hooks.once("tokenActionHudCoreApiReady",(async t=>{c=class Utils{static getSetting(i,s=null){let n=s??null;try{n=game.settings.get(e.ID,i)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}return n}static async setSetting(i,s){try{s=await game.settings.set(e.ID,i,s),t.api.Logger.debug(`Setting '${i}' set to '${s}'`)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}}}}));let d=null;function createRollHandlerClass(e){return class RollHandler extends e.RollHandler{async handleActionClick(e,t){const[i,s]=t.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,s);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#w(e,this.actor,s);const n=["character"];if(this.actor)return void await this.#$(e,this.actor,this.token,i,s);const a=canvas.tokens.controlled.filter((e=>n.includes(e.actor?.type)));for(const t of a){const n=t.actor;await this.#$(e,n,t,i,s)}}async handleActionHover(e,t){}async handleGroupClick(e,t){}async#$(e,t,i,s,n){switch(s){case"weapons":this.#_(e,t,n);break;case"ring":this.#U(e,t,n);break;case"skill":this.#C(e,t,n);break;case"technique":this.#S(e,t,n);break;case"armor":case"equipment":await this.#H(e,t,n);break;case"utility":this.#T(i,n)}}async#H(e,t,i){const s=t.items.get(i);await game.l5r5e.HelpersL5r5e.sendToChat(s)}async#w(e,t,i){}#_(e,t,i){const s=t.items.get(i);new game.l5r5e.DicePickerDialog({skillId:s.system.skill}).render(!0)}#U(e,t,i){new game.l5r5e.DicePickerDialog({ringId:i}).render(!0)}#C(e,t,i){new game.l5r5e.DicePickerDialog({skillId:i}).render(!0)}#S(e,t,i){const s=t.items.get(i);s&&"technique"===s.type&&s.system.skill&&new game.l5r5e.DicePickerDialog({skillsList:s.system.skill,ringId:s.system.ring,difficulty:s.system.difficulty}).render(!0)}async#T(e,t){if("endTurn"===t)game.combat?.current?.tokenId===e.id&&await(game.combat?.nextTurn())}}}function register(t){game.settings.register(e.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}function createSystemManagerClass(e){const t=createActionHandlerClass(e),i=createRollHandlerClass(e);return class SystemManager extends e.SystemManager{getActionHandler(){return new t}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(e){let t;return t=new i,t}async registerDefaults(){return d}registerSettings(e){register(e)}}}Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=n;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.listName??t.name)}`}));const i=Object.values(t);d={layout:[{nestId:"inventory",id:"inventory",name:e.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...t.weapons,nestId:"inventory_weapons"},{...t.armor,nestId:"inventory_armor"},{...t.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:e.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...t.rings,nestId:"attributes_rings"},{...t.derived,nestId:"attributes_derived"},{...t.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:e.api.Utils.i18n("l5r5e.skills.title"),groups:[{...t.artisan,nestId:"skills_artisan"},{...t.martial,nestId:"skills_martial"},{...t.scholar,nestId:"skills_scholar"},{...t.social,nestId:"skills_social"},{...t.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:e.api.Utils.i18n("l5r5e.techniques.title"),groups:[{...t.school_ability,nestId:"techniques_school"},{...t.mastery_ability,nestId:"techniques_mastery"},{...t.kata,nestId:"techniques_kata"},{...t.kiho,nestId:"techniques_kiho"},{...t.inversion,nestId:"techniques_inversion"},{...t.invocation,nestId:"techniques_invocation"},{...t.ritual,nestId:"techniques_ritual"},{...t.shuji,nestId:"techniques_shuji"},{...t.maho,nestId:"techniques_maho"},{...t.ninjutsu,nestId:"techniques_ninjutsu"},{...t.mantra,nestId:"techniques_mantra"},{...t.title_ability,nestId:"techniques_title"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:i}})),Hooks.once("tokenActionHudCoreApiReady",(t=>{try{if("function"!=typeof t.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(t);t.registerSystem({moduleId:e.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(e){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",e)}}));export{s as ACTION_TYPE,t as CORE_MODULE,d as DEFAULTS,n as GROUP,l as ITEM_PATTERN,o as ITEM_QUALITIES,a as ITEM_TYPE,e as MODULE,i as REQUIRED_CORE_MODULE_VERSION,r as SKILL_TYPE,c as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getCoreApi,getCoreModule,register};
