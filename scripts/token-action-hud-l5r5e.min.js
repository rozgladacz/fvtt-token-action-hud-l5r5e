const e={ID:"token-action-hud-l5r5e"},t={ID:"token-action-hud-core"},i="2.0.12",n={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},s={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},a={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},l={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},r={razor_edged:"tokenActionHud.l5r5e.qualities.razorEdged",ceremonial:"tokenActionHud.l5r5e.qualities.ceremonial",damaged:"tokenActionHud.l5r5e.qualities.damaged",destroyed:"tokenActionHud.l5r5e.qualities.destroyed",concealable:"tokenActionHud.l5r5e.qualities.concealable",cumbersome:"tokenActionHud.l5r5e.qualities.cumbersome",snaring:"tokenActionHud.l5r5e.qualities.snaring",unholy:"tokenActionHud.l5r5e.qualities.unholy",forbidden:"tokenActionHud.l5r5e.qualities.forbidden",resplendent:"tokenActionHud.l5r5e.qualities.resplendent",wargear:"tokenActionHud.l5r5e.qualities.wargear",mundane:"tokenActionHud.l5r5e.qualities.mundane",prepare:"tokenActionHud.l5r5e.qualities.prepare",sacred:"tokenActionHud.l5r5e.qualities.sacred",durable:"tokenActionHud.l5r5e.qualities.durable",subtle:"tokenActionHud.l5r5e.qualities.subtle",kenzo_blade:"tokenActionHud.l5r5e.qualities.kenzoBlade"},o={jade_inlay:"tokenActionHud.l5r5e.patterns.jadeInlay",uchema:"tokenActionHud.l5r5e.patterns.uchema",yasunori:"tokenActionHud.l5r5e.patterns.yasunori",akodo:"tokenActionHud.l5r5e.patterns.akodo",burning_water:"tokenActionHud.l5r5e.patterns.burningWater",concealment:"tokenActionHud.l5r5e.patterns.concealment",deadly_fangs:"tokenActionHud.l5r5e.patterns.deadlyFangs",fearsome_snarl:"tokenActionHud.l5r5e.patterns.fearsomeSnarl",ichiro:"tokenActionHud.l5r5e.patterns.ichiro",mountain_silk:"tokenActionHud.l5r5e.patterns.mountainSilk",screaming_fire:"tokenActionHud.l5r5e.patterns.screamingFire",toriyama:"tokenActionHud.l5r5e.patterns.toriyama",qamarist:"tokenActionHud.l5r5e.patterns.qamarist",yodhaniya:"tokenActionHud.l5r5e.patterns.yodhaniya",kokejin:"tokenActionHud.l5r5e.patterns.kokejin",agasha:"tokenActionHud.l5r5e.patterns.agasha"},c={default:{icon:"fa-solid fa-tag",class:"tah-tag-secondary"},pattern:{icon:"fa-solid fa-swatchbook",class:"tah-tag-tertiary"},bonus:{icon:"fa-solid fa-arrow-up-right-dots",class:"tah-tag-alt"},clan:{label:"tokenActionHud.l5r5e.tags.clan",icon:"fa-solid fa-flag",class:"tah-tag-secondary"},culture:{label:"tokenActionHud.l5r5e.tags.culture",icon:"fa-solid fa-earth-asia",class:"tah-tag-secondary"},material:{label:"tokenActionHud.l5r5e.tags.material",icon:"fa-solid fa-gem",class:"tah-tag-secondary"},tradition:{label:"tokenActionHud.l5r5e.tags.tradition",icon:"fa-solid fa-scroll",class:"tah-tag-secondary"}},u={armorTN:{label:"tokenActionHud.l5r5e.bonuses.armorTN",icon:"fa-solid fa-shield-halved",class:"tah-tag-alt"},resistance:{label:"tokenActionHud.l5r5e.bonuses.resistance",icon:"fa-solid fa-shield",class:"tah-tag-alt"},fatigue:{label:"tokenActionHud.l5r5e.bonuses.fatigue",icon:"fa-solid fa-heart-pulse",class:"tah-tag-alt"},strife:{label:"tokenActionHud.l5r5e.bonuses.strife",icon:"fa-solid fa-fire",class:"tah-tag-alt"},deadliness:{label:"tokenActionHud.l5r5e.bonuses.deadliness",icon:"fa-solid fa-skull",class:"tah-tag-alt"},damage:{label:"tokenActionHud.l5r5e.bonuses.damage",icon:"fa-solid fa-burst",class:"tah-tag-alt"},opportunities:{label:"tokenActionHud.l5r5e.bonuses.opportunities",icon:"fa-solid fa-dice-d20",class:"tah-tag-alt"}};let d=null;function createActionHandlerClass(e){return class ActionHandler extends e.ActionHandler{async buildSystemActions(t){if(this.actors=this.actor?[this.actor]:this.#e(),this.tokens=this.token?[this.token]:this.#t(),this.actorType=this.actor?.type,this.displayUnequipped=d.getSetting("displayUnequipped"),this.actor){let t=this.actor.items;t=e.Utils.sortItemsByName(t),this.items=t}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["armor","equipment","weapons"],this.techniqueGroupIds=["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school-ability","mastery-ability","title-ability"],await this.#i()):this.actor||this.#n()}async#i(){await Promise.all([this.#s(),this.#a()]),this.#l(),this.#r()}#n(){}async#s(){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){const n=i.system.equipped,s=i.system?.quantity>0,a=this.#o(i),l=i.type;s&&(n&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,i)),n||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,i)),a&&("item"===l&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,i)),"weapon"===l&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,i)),"armor"===l&&(t.has("armor")||t.set("armor",new Map),t.get("armor").set(e,i))))}const i={equipment:e.Utils.i18n("l5r5e.items.title"),armor:e.Utils.i18n("l5r5e.armors.title"),weapons:e.Utils.i18n("l5r5e.weapons.title")};for(const e of this.inventorygroupIds){if(!t.has(e))continue;const n={id:e,name:i[e],type:"system"},s=t.get(e);await this.#c(s,n,e)}}#l(){const t="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const n=this.actor.system.stance,s={id:"rings",name:`${e.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},a=Object.values(i).map((i=>{try{const s=i.id,a=[t,s].join(this.delimiter),l=`${e.Utils.i18n(`l5r5e.rings.${s}`)}: ${i.value}`??"",r=`${`${i.label}:`??""}${l}`,o=e.Utils.getImage(`systems/l5r5e/assets/icons/rings/${s}.svg`),c=`${e.Utils.i18n(`l5r5e.conflict.stances.${s}tip`)}`;let u="";return s===n&&(u="toggle active"),{id:s,name:l,img:o,encodedValue:a,cssClass:u,tooltip:c,listName:r}}catch(t){return e.Logger.error(i),null}})).filter((e=>!!e));this.addActions(a,s)}#r(){if("character"!==this.actorType)return;const t="skill",i=game.l5r5e.HelpersL5r5e.getCategoriesSkillsList();for(const[n,s]of i)try{const i={id:n,name:`${e.Utils.i18n(`l5r5e.skills.${n}.title`)}`??n,type:"system"},a=Object.entries(s).map((i=>{const s=i[1],a=[t,s].join(this.delimiter),l=this.actor.system.skills[n][s],r=`${e.Utils.i18n(`l5r5e.skills.${n}.${s}`)}: ${l}`??"";return{id:s,name:r,encodedValue:a,listName:`${`${e.Utils.i18n("l5r5e.skills.label")}: `??""}${r}`}}));this.addActions(a,i)}catch(t){return e.Logger.error(n),null}}async#a(e){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){if(this.#u(i)){const n=String(i.system.technique_type).replace("_","-");t.has(n)||t.set(n,new Map),t.get(n).set(e,i)}}for(const e of this.techniqueGroupIds){if(!t.has(e))continue;const i={id:e,type:"system"},n=t.get(e);await this.#c(n,i,"technique")}}#e(){const t=["character","npc"],i=e.Utils.getControlledTokens()?.filter((e=>e.actor)).map((e=>e.actor));return i.every((e=>t.includes(e.type)))?i:[]}#t(){const t=["character","npc"],i=e.Utils.getControlledTokens(),n=i?.filter((e=>e.actor)).map((e=>e.actor));return n.every((e=>t.includes(e.type)))?i:[]}#o(e){const t=e.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(t))return!0;return!!e.system.equipped}#u(e){if("technique"!==e.type)return!1;return!!["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school_ability","mastery_ability","title_ability"].includes(e.system.technique_type)}async#c(e,t,i="item"){if(0===e.size)return;if(!("string"==typeof t?t:t?.id))return;const n=await Promise.all([...e].map((async e=>await this.#d(i,e[1]))));this.addActions(n,t)}async#d(t,i){const s=i.id??i._id;let a=i?.name??i?.label;const l=`${`${e.Utils.i18n(n[t])}: `??""}${a}`;let r="";if(Object.hasOwn(i.system,"readied")){r=`toggle${i.system.readied?" active":""}`}const o=[t,s].join(this.delimiter),c=e.Utils.getImage(i),u=this.#m(i?.system?.activation?.type);let d=this.#p(i);const m=d?.info1,p=d?.info2,y=d?.info3,g=await this.#y(i);return{id:s,name:a,encodedValue:o,cssClass:r,img:c,icon1:u,icon2:null,info1:m,info2:p,info3:y,listName:l,tooltip:await this.#g(g)}}#m(e){}#p(e){return{info1:{text:this.#h(e)},info2:{text:this.#f(e)},info3:{text:this.#k(e)}}}#h(e){const t=e?.system?.quantity??0;return t>1?t:""}#f(e){const t=e?.system?.uses;return t&&(t.value>0||t.max>0)?`${t.value??"0"}${t.max>0?`/${t.max}`:""}`:""}#k(e){const t=e?.system?.consume?.target,i=e?.system?.consume?.type;if(t===e.id)return"";if("attribute"===i){if(!t)return"";const e=t.substr(0,t.lastIndexOf(".")),i=this.actor.system[e];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const n=this.items.get(t);if("charges"===i){const e=n?.system.uses;return e?.value?`${e.value}${e.max?`/${e.max}`:""}`:""}return n?.system?.quantity??""}async#y(e){if("none"===this.tooltipsSetting)return"";const t=e?.name??"";if("nameOnly"===this.tooltipsSetting)return t;const i="string"==typeof e?.system?.description?e?.system?.description:e?.system?.description?.value??"",n=e?.modifiers??null,s=[...e.system?.chatProperties??[],...e.system?.equippableItemCardProperties??[],...e.system?.activatedEffectCardProperties??[]].filter((e=>e)),a=e?.type;return{name:t,type:a,description:i,modifiers:n,properties:s,rarity:e?.system?.rarity??null,traits:this.#b(e?.system?.properties),patterns:this.#A(e?.system?.patterns),tags:this.#q(e?.system?.tags),bonuses:this.#v(e?.system?.bonuses),range:"weapon"===e?.type?e?.system?.range:null,damage:"weapon"===e?.type?e?.system?.damage:null,deadliness:"weapon"===e?.type?e?.system?.deadliness:null,grip1:"weapon"===e?.type?e?.system?.grip_1:null,grip2:"weapon"===e?.type?e?.system?.grip_2:null,physical:"armor"===e?.type?e?.system?.armor?.physical:null,supernatural:"armor"===e?.type?e?.system?.armor?.supernatural:null}}#b(t){if(!t)return null;const i=Object.entries(t).filter((([e,t])=>{if("boolean"==typeof t)return t;if("object"==typeof t){if(!1===t?.value)return!1;if(!1===t?.active)return!1}return!0})).map((([t,i])=>{const n=r[t],s=i?.label??i?.name??this.#I(t),a=n??s,l=!Boolean(!n&&s)&&a?e.Utils.i18n(a):a;return!l||l===a&&n&&s?s:l})).filter(Boolean);return i.length>0?i:null}async#g(t){if("none"===this.tooltipsSetting)return"";if("string"==typeof t)return t;const i=e.Utils.i18n(t.name);if("nameOnly"===this.tooltipsSetting)return i;const n=`<h3>${i}</h3>`,s=t?.descriptionLocalised??await TextEditor.enrichHTML(e.Utils.i18n(t?.description??""),{async:!0}),a=t?.traits?.length?`<div class="tah-properties">${t.traits.map((e=>`<span class="tah-property">${e}</span>`)).join("")}</div>`:"",l=[t?.rarity?[{label:"tokenActionHud.l5r5e.tooltip.rarity",value:t.rarity,class:this.#H(t.rarity)}]:[],"weapon"===t.type?this.#w(t):[],"weapon"===t.type?this.#$(t):[],"armor"===t.type?this.#_(t):[],t.patterns??[],t.tags??[],t.bonuses??[]].flat(),r=this.#U(l);return s||r?`<div>${n}${r?`<div class="tah-tags-wrapper">${r??""}</div>`:""}${s}${a}</div>`:i}#H(e){return e?e<3?"common":e<5?"uncommon":e<7?"rare":e<9?"veryRare":9==e?"legendary":10==e?"artifact":void 0:""}#w(e){return[e.range?{label:"l5r5e.weapons.range",value:e.range}:null,e.damage?{label:"l5r5e.weapons.damage",value:e.damage}:null,e.deadliness?{label:"l5r5e.weapons.deadliness",value:e.deadliness}:null].filter(Boolean)}#$(e){return[e.grip1&&"N/A"!==e.grip1?{label:"l5r5e.weapons.1hand",value:e.grip1}:null,e.grip2&&"N/A"!==e.grip2?{label:"l5r5e.weapons.2hand",value:e.grip2}:null].filter(Boolean)}#_(e){return[e?.physical&&e?.physical>0?{label:"l5r5e.armors.physical",value:e?.physical}:null,e?.supernatural&&e?.supernatural>0?{label:"l5r5e.armors.supernatural",value:e?.supernatural}:null].filter(Boolean)}#A(e){const t=this.#C(e);if(!t.length)return null;const i=c.pattern??c.default,n=i?.icon??c.default?.icon,s=i?.class??c.default?.class,a=t.map((e=>{if(!e)return null;const t="object"==typeof e?e:{id:e},i=t?.id??t?.key??t?.slug??t?.name;if(!i)return null;if(!(!1!==(t?.active??t?.enabled??t?.value??!0)))return null;const a=o[i],l=t?.label??t?.name??this.#I(i);return a||l?{label:a??l,localized:!a&&Boolean(l),fallback:l,icon:n,class:s}:null})).filter(Boolean);return a.length?a:null}#q(e){const t=this.#C(e);return t.length?t.map((e=>{if(!e)return null;const t="object"==typeof e?e:{id:e},i=t?.id??t?.key??t?.slug??t?.type??t?.name;if(!i)return null;if(!(!1!==(t?.active??t?.enabled??t?.value??!0)))return null;const n=c[i]??c.default,s=n?.label??(i?`tokenActionHud.l5r5e.tags.${i}`:null),a=t?.label??t?.name??this.#I(i),l=t?.amount??t?.rating??t?.value,r="number"==typeof l||"string"==typeof l?l:void 0;return s||a?{label:s??a,localized:!s&&Boolean(a),fallback:a,value:r,icon:n?.icon??c.default?.icon,class:n?.class??c.default?.class}:null})).filter(Boolean):null}#v(e){const t=this.#C(e);if(!t.length)return null;const i=c.bonus??c.default,n=t.map((e=>{if(!e)return null;const t="object"==typeof e?e:{id:e},n=t?.id??t?.key??t?.slug??t?.type??t?.name;if(!n)return null;if(!(!1!==(t?.active??t?.enabled??!0)))return null;const s=u[n]??i,a=s?.label??(n?`tokenActionHud.l5r5e.bonuses.${n}`:null),l=t?.label??t?.name??this.#I(n),r=t?.value??t?.amount??t?.bonus??t?.rating,o="number"==typeof r||"string"==typeof r?r:void 0;return a||l||void 0!==o?{label:a??l,localized:!a&&Boolean(l),fallback:l,value:o,icon:s?.icon??i?.icon,class:s?.class??i?.class}:null})).filter(Boolean);return n.length?n:null}#U(e){if(!e||0===e.length)return"";const t=e.map((e=>this.#T(e))).filter(Boolean).join("");return t?`<div class="tah-tags">${t}</div>`:""}#T(t){if(!t)return"";const i=["tah-tag"];t.class&&i.push(t.class);const n=i.filter(Boolean).join(" "),s=t.icon?`<i class="${t.icon}" aria-hidden="true"></i>`:"";if(t.text)return`<span class="${n}">${s}${s?`<span class="tah-tag-text">${t.text}</span>`:t.text}</span>`;const a=t.label??"";let l="";if(t.localized?l=a:a&&(l=e.Utils.i18n(a),t.fallback&&l===a&&(l=t.fallback)),l||(l=t.fallback??""),!l)return"";const r=void 0!==t.value&&null!==t.value&&""!==t.value?`${l}: ${t.value}`:l;return`<span class="${n}"${t.title?` title="${t.title}"`:""}>${s?`${s}<span class="tah-tag-text">${r}</span>`:r}</span>`}#C(e){return e?Array.isArray(e)?e.filter((e=>null!=e)):e instanceof Set?[...e]:"object"==typeof e?Object.entries(e).map((([e,t])=>"object"==typeof t&&null!==t?{id:e,...t}:{id:e,value:t})):[e]:[]}#I(e){return e&&"string"==typeof e?e.replace(/[-_]/g," ").replace(/\s+/g," ").trim().replace(/\b\w/g,(e=>e.toUpperCase())):""}}}Hooks.once("tokenActionHudCoreApiReady",(async t=>{d=class Utils{static getSetting(i,n=null){let s=n??null;try{s=game.settings.get(e.ID,i)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}return s}static async setSetting(i,n){try{n=await game.settings.set(e.ID,i,n),t.api.Logger.debug(`Setting '${i}' set to '${n}'`)}catch{t.api.Logger.debug(`Setting '${i}' not found`)}}}}));let m=null;function getCoreModule(){const e=game.modules.get(t.ID);if(!e)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return e}function getCoreApi(){const e=getCoreModule();if(!e.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return e.api}function createRollHandlerClass(e){return class RollHandler extends e.RollHandler{async handleActionClick(e,t){const[i,n]=t.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,n);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#j(e,this.actor,n);const s=["character"];if(this.actor)return void await this.#S(e,this.actor,this.token,i,n);const a=canvas.tokens.controlled.filter((e=>s.includes(e.actor?.type)));for(const t of a){const s=t.actor;await this.#S(e,s,t,i,n)}}async handleActionHover(e,t){}async handleGroupClick(e,t){}async#S(e,t,i,n,s){switch(n){case"weapons":this.#D(e,t,s);break;case"ring":this.#x(e,t,s);break;case"skill":this.#M(e,t,s);break;case"technique":this.#R(e,t,s);break;case"armor":case"equipment":await this.#L(e,t,s);break;case"utility":this.#P(i,s)}}async#L(e,t,i){const n=t.items.get(i);await game.l5r5e.HelpersL5r5e.sendToChat(n)}async#j(e,t,i){}#D(e,t,i){const n=t.items.get(i);new game.l5r5e.DicePickerDialog({skillId:n.system.skill}).render(!0)}#x(e,t,i){new game.l5r5e.DicePickerDialog({ringId:i}).render(!0)}#M(e,t,i){new game.l5r5e.DicePickerDialog({skillId:i}).render(!0)}#R(e,t,i){const n=t.items.get(i);n&&"technique"===n.type&&n.system.skill&&new game.l5r5e.DicePickerDialog({skillsList:n.system.skill,ringId:n.system.ring,difficulty:n.system.difficulty}).render(!0)}async#P(e,t){if("endTurn"===t)game.combat?.current?.tokenId===e.id&&await(game.combat?.nextTurn())}}}function register(t){game.settings.register(e.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}function createSystemManagerClass(e){const t=createActionHandlerClass(e),i=createRollHandlerClass(e);return class SystemManager extends e.SystemManager{getActionHandler(){return new t}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(e){let t;return t=new i,t}async registerDefaults(){return m}registerSettings(e){register(e)}}}Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=s;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.listName??t.name)}`}));const i=Object.values(t);m={layout:[{nestId:"inventory",id:"inventory",name:e.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...t.weapons,nestId:"inventory_weapons"},{...t.armor,nestId:"inventory_armor"},{...t.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:e.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...t.rings,nestId:"attributes_rings"},{...t.derived,nestId:"attributes_derived"},{...t.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:e.api.Utils.i18n("l5r5e.skills.title"),groups:[{...t.artisan,nestId:"skills_artisan"},{...t.martial,nestId:"skills_martial"},{...t.scholar,nestId:"skills_scholar"},{...t.social,nestId:"skills_social"},{...t.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:e.api.Utils.i18n("l5r5e.techniques.title"),groups:[{...t.school_ability,nestId:"techniques_school"},{...t.mastery_ability,nestId:"techniques_mastery"},{...t.kata,nestId:"techniques_kata"},{...t.kiho,nestId:"techniques_kiho"},{...t.inversion,nestId:"techniques_inversion"},{...t.invocation,nestId:"techniques_invocation"},{...t.ritual,nestId:"techniques_ritual"},{...t.shuji,nestId:"techniques_shuji"},{...t.maho,nestId:"techniques_maho"},{...t.ninjutsu,nestId:"techniques_ninjutsu"},{...t.mantra,nestId:"techniques_mantra"},{...t.title_ability,nestId:"techniques_title"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:i}})),Hooks.once("tokenActionHudCoreApiReady",(t=>{try{if("function"!=typeof t.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(t);t.registerSystem({moduleId:e.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(e){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",e)}}));export{n as ACTION_TYPE,t as CORE_MODULE,m as DEFAULTS,s as GROUP,u as ITEM_BONUS,o as ITEM_PATTERN,r as ITEM_QUALITIES,c as ITEM_TAGS,a as ITEM_TYPE,e as MODULE,i as REQUIRED_CORE_MODULE_VERSION,l as SKILL_TYPE,d as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getCoreApi,getCoreModule,register};
