const t={ID:"token-action-hud-l5r5e"},e={ID:"token-action-hud-core"},i="2.0.12",n={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility",armor:"l5r5e.armors.title",equipment:"l5r5e.items.title",weapons:"l5r5e.weapons.title",technique:"l5r5e.techniques.title",ring:"l5r5e.rings.title",skill:"l5r5e.skills.title",derived:"l5r5e.attributes.title",standing:"l5r5e.social.title"},s={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},r={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},a={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},o={razor_edged:"Razor-Edged",ceremonial:"Ceremonial",damaged:"Damaged",destroyed:"Destroyed",concealable:"Concealable",cumbersome:"Cumbersome",snaring:"Snaring",unholy:"Unholy",forbidden:"Forbidden",resplendent:"Resplendent",wargear:"Wargear",mundane:"Mundane",prepare:"Prepare",sacred:"Sacred",durable:"Durable",subtle:"Subtle",kenzo_blade:"Kenzō Blade"},l={jade_inlay:"Shirogane Jade Inlay",uchema:"Uchema’s Technique",yasunori:"Yasunori Steel",akodo:"Akodo Pattern",burning_water:"Burning Watter Pattern",concealment:"Concealment Pattern",deadly_fangs:"Deadly Fangs Pattern",fearsome_snarl:"Fearsome Snarl Pattern",ichiro:"Ichirō Pattern",mountain_silk:"Mountain Silk Pattern",screaming_fire:"Screaming Fire Pattern",toriyama:"Toriyama Endurance Pattern",qamarist:"Spirit of the Qamarist Pattern",yodhaniya:"Ghostlands Yodhaniya Pattern",kokejin:"Kökejin’s Heart of the Wind Pattern",agasha:"Agasha Pattern"},c=[{id:"kata",actorKey:"kata",translationKey:"l5r5e.techniques.kata"},{id:"kiho",actorKey:"kiho",translationKey:"l5r5e.techniques.kiho"},{id:"inversion",actorKey:"inversion",translationKey:"l5r5e.techniques.inversion"},{id:"invocation",actorKey:"invocation",translationKey:"l5r5e.techniques.invocation"},{id:"ritual",actorKey:"ritual",translationKey:"l5r5e.techniques.ritual"},{id:"shuji",actorKey:"shuji",translationKey:"l5r5e.techniques.shuji"},{id:"maho",actorKey:"maho",translationKey:"l5r5e.techniques.maho"},{id:"ninjutsu",actorKey:"ninjutsu",translationKey:"l5r5e.techniques.ninjutsu"},{id:"mantra",actorKey:"mantra",translationKey:"l5r5e.techniques.mantra"},{id:"school-ability",actorKey:"school_ability",translationKey:"l5r5e.techniques.school_ability"},{id:"mastery-ability",actorKey:"mastery_ability",translationKey:"l5r5e.techniques.mastery_ability"},{id:"title-ability",actorKey:"title_ability",translationKey:"l5r5e.techniques.title_ability"}],u=[{id:"armor",actorKey:"armor",translationKey:"l5r5e.armors.title"},{id:"equipment",actorKey:"equipment",translationKey:"l5r5e.items.title"},{id:"weapons",actorKey:"weapons",translationKey:"l5r5e.weapons.title"}],d={derived:{helperMethods:["getDerivedAttributesList","getDerivedList","getDerivedAttributes"],helperArgsSets:t=>[[t],[]],configPaths:["derivedAttributes","derived","attributes.derived"],actorPaths:["derived","attributes.derived"],translationPrefix:"l5r5e.attributes"},standing:{helperMethods:["getStandingAttributesList","getStandingList","getSocialAttributesList","getSocialAttributes"],helperArgsSets:t=>[[t],[]],configPaths:["standingAttributes","standing","social","attributes.social"],actorPaths:["standing","social","attributes.standing","attributes.social"],translationPrefix:"l5r5e.social"}};function sanitizeId(t){if(null==t)return"";return String(t).trim().replace(/\s+/g,"-").replace(/_/g,"-").toLowerCase()}function unsanitizeId(t){if(null==t)return"";return String(t).trim().replace(/\s+/g,"_").replace(/-/g,"_")}function getTechniqueTypeEntries(){return dedupeEntries(collectEntries({helperMethods:["getTechniqueTypesList","getTechniqueTypes","getTechniquesTypesList","getTechniquesList"],configPaths:["techniqueTypes","technique_types","techniques.types","techniques.categories","techniques.type"],translationPrefix:"l5r5e.techniques",stringIsTranslation:!0,fallback:c}))}function getInventoryGroupEntries(){return dedupeEntries(collectEntries({helperMethods:["getInventoryGroupIds","getInventoryCategoriesList","getInventorySections"],configPaths:["inventory.groups","inventory.categories","inventoryCategories","itemGroups.inventory","items.inventory"],translationPrefix:null,stringIsTranslation:!0,fallback:u}))}function getAttributeEntries(t,e){const i=d[t];if(!i)return{entries:[],section:null};const n="function"==typeof i.helperArgsSets?i.helperArgsSets(e):i.helperArgsSets??[[]],s=collectEntries({helperMethods:i.helperMethods,helperArgsSets:n,configPaths:i.configPaths,translationPrefix:i.translationPrefix,stringIsTranslation:!0,fallback:[]}),r=getActorSection(e,i.actorPaths);if(s.length>0)return{entries:dedupeEntries(s),section:r};if(!r)return{entries:[],section:null};return{entries:dedupeEntries(Object.keys(r).map((t=>{const e=t;return{id:sanitizeId(e),actorKey:e,translationKey:i.translationPrefix?buildTranslationKey(i.translationPrefix,e):null}}))),section:r}}function getActorSection(t,e=[]){if(!t)return null;const i=t.system??{};for(const t of e){const e=getProperty(i,t);if(e)return e}return null}function collectEntries({helperMethods:t=[],helperArgsSets:e=[[]],configPaths:i=[],translationPrefix:n=null,stringIsTranslation:s=!1,fallback:r=[]}){const a=function getEntriesFromHelpers(t,e,i,n){const s=game?.l5r5e?.HelpersL5r5e;if(!s)return[];for(const r of t){const t=s?.[r];if("function"==typeof t)for(const a of e)try{const e=normalizeEntries(Array.isArray(a)?t.apply(s,a):t.call(s,a),{translationPrefix:i,stringIsTranslation:n});if(e.length>0)return e}catch(t){console.debug(`Token Action HUD L5R5e | Helper ${r} failed`,t)}}return[]}(t,e,n,s);if(a.length>0)return a;const o=function getEntriesFromConfig(t,e,i){const n=CONFIG?.l5r5e;if(!n)return[];for(const s of t){const t=normalizeEntries(getProperty(n,s),{translationPrefix:e,stringIsTranslation:i});if(t.length>0)return t}return[]}(i,n,s);return o.length>0?o:r}function normalizeEntries(t,e={}){if(!t)return[];if(t instanceof Map)return[...t.entries()].map((([t,i])=>normalizeEntry(i,t,e))).filter(Boolean);if(Array.isArray(t))return t.map(((t,i)=>normalizeEntry(t,t?.id??t?.key??t?.type??t?.slug??t??i,e))).filter(Boolean);if("object"==typeof t)return Object.entries(t).map((([t,i])=>normalizeEntry(i,t,e))).filter(Boolean);if("string"==typeof t){const i=normalizeEntry(t,t,e);return i?[i]:[]}return[]}function normalizeEntry(t,e,{translationPrefix:i,stringIsTranslation:n}={}){if(null==t)return null;let s,r,a,o;if("object"!=typeof t||Array.isArray(t)?"string"==typeof t?(s=e??t,n&&t.includes(".")?r=t:e||(s=t),!r&&!a&&n&&t.includes(".")&&(r=t),a||n||(a=t)):s=e:(s=t.id??t.key??t.type??t.slug??t.value??t.name??e,r=t.translationKey??t.labelKey??t.i18n??null,a=t.label??t.name??t.title??t.display??t.text??null,o=t.path??t.dataPath??null),!s&&0!==s)return null;const l="string"==typeof s?s:String(s),c=sanitizeId(l);return!r&&i&&(r=buildTranslationKey(i,l)),{id:c,actorKey:l,translationKey:r,label:a,path:o}}function buildTranslationKey(t,e){if(!t||null==e)return null;return`${t}.${String(e).replace(/\s+/g,"_").replace(/-/g,"_").toLowerCase()}`}function dedupeEntries(t){const e=new Map;for(const i of t)i?.id&&(e.has(i.id)||e.set(i.id,i));return[...e.values()]}function getProperty(t,e){if(!t||!e)return;const i=e.split(".");let n=t;for(const t of i){if(null==n)return;n=n[t]}return n}let p=null;function createActionHandlerClass(t){return class ActionHandler extends t.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.displayUnequipped=p.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.Utils.sortItemsByName(e),this.items=e,this.inventoryGroups=this.#i(getInventoryGroupEntries()),this.inventorygroupIds=[...this.inventoryGroups.keys()];const i=getTechniqueTypeEntries();this.techniqueGroups=this.#i(i),this.techniqueGroupIds=[...this.techniqueGroups.keys()],this.techniqueTypeKeys=new Set(i.flatMap((t=>[t.actorKey??t.id,t.id])))}"character"===this.actorType||"npc"===this.actorType?await this.#n():this.actor||this.#s()}async#n(){await Promise.all([this.#r(),this.#a()]),this.#o(),this.#l(),this.#c(),this.#u()}#s(){}async#r(){if(0===this.items.size)return;const t=new Map;for(const[e,i]of this.items){const n=i.system.equipped,s=i.system?.quantity>0,r=this.#d(i),a=i.type;s&&(n&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,i)),n||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,i)),r&&("item"===a&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,i)),"weapon"===a&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,i)),"armor"===a&&(t.has("armor")||t.set("armor",new Map),t.get("armor").set(e,i))))}for(const e of this.inventorygroupIds){if(!t.has(e))continue;const i=t.get(e);if(!i)continue;const n=this.#p(e,this.inventoryGroups);await this.#y(i,n,e)}}#o(){const e="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const n=this.actor.system.stance,s={id:"rings",name:`${t.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},r=Object.values(i).map((i=>{try{const s=i.id,r=[e,s].join(this.delimiter),a=`${t.Utils.i18n(`l5r5e.rings.${s}`)}: ${i.value}`??"",o=`${`${i.label}:`??""}${a}`,l=t.Utils.getImage(`systems/l5r5e/assets/icons/rings/${s}.svg`),c=`${t.Utils.i18n(`l5r5e.conflict.stances.${s}tip`)}`;let u="";return s===n&&(u="toggle active"),{id:s,name:a,img:l,encodedValue:r,cssClass:u,tooltip:c,listName:o}}catch(e){return t.Logger.error(i),null}})).filter((t=>!!t));this.addActions(r,s)}#u(){if("character"!==this.actorType)return;const e="skill",i=game.l5r5e.HelpersL5r5e.getCategoriesSkillsList();for(const[n,s]of i)try{const i={id:n,name:`${t.Utils.i18n(`l5r5e.skills.${n}.title`)}`??n,type:"system"},r=Object.entries(s).map((i=>{const s=i[1],r=[e,s].join(this.delimiter),a=this.actor.system.skills[n][s],o=`${t.Utils.i18n(`l5r5e.skills.${n}.${s}`)}: ${a}`??"";return{id:s,name:o,encodedValue:r,listName:`${`${t.Utils.i18n("l5r5e.skills.label")}: `??""}${o}`}}));this.addActions(r,i)}catch(e){return t.Logger.error(n),null}}async#a(t){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){if(this.#m(i)){const n=sanitizeId(i.system.technique_type);e.has(n)||e.set(n,new Map),e.get(n).set(t,i)}}const i=[...new Set([...this.techniqueGroupIds,...e.keys()])];for(const t of i){if(!e.has(t))continue;const i=this.#p(t,this.techniqueGroups,{fallbackPrefix:"l5r5e.techniques"}),n=e.get(t);await this.#y(n,i,"technique")}}#t(){const e=["character","npc"],i=t.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return i.every((t=>e.includes(t.type)))?i:[]}#e(){const e=["character","npc"],i=t.Utils.getControlledTokens(),n=i?.filter((t=>t.actor)).map((t=>t.actor));return n.every((t=>e.includes(t.type)))?i:[]}#d(t){const e=t.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(e))return!0;return!!t.system.equipped}#m(t){if("technique"!==t.type)return!1;if(!this.techniqueTypeKeys||0===this.techniqueTypeKeys.size)return!0;const e=t.system.technique_type;return!!e&&(this.techniqueTypeKeys.has(e)||this.techniqueTypeKeys.has(sanitizeId(e)))}#l(){this.#h("derived")}#c(){this.#h("standing")}#h(t){if(!this.actor)return;const{entries:e,section:i}=getAttributeEntries(t,this.actor);if(!i||0===e.length)return;const n=e.map((e=>this.#g(e,i,t))).filter((t=>!!t));if(0===n.length)return;const s=this.#f(t);this.addActions(n,s)}#g(e,i,r){const a=this.#b(i,e);if(void 0===a)return null;const o=this.#k(a),l=""!==o,c=this.#A(e,r),u=l?`${c}: ${o}`:c,d=t.Utils.i18n(n[r]??s?.[r]?.name??""),p=d?`${d}: ${u}`:u,y=[r,e.actorKey??e.id].join(this.delimiter),m={id:e.id,name:u,encodedValue:y,listName:p};return l&&(m.info1={text:o}),m}#b(t,e){const i=[];e.path&&i.push(e.path);[e.actorKey,e.id].forEach((t=>{t&&(i.push(t),i.push(String(t).replace(/-/g,"_")))}));for(const e of i){const i=this.#v(t,e);if(void 0!==i)return i}}#k(t){if(null==t)return"";if("number"==typeof t||"string"==typeof t)return String(t);const e=this.#q(t.value,t.current,t.rank,t.score,t.points,t.amount,t.total),i=this.#q(t.max,t.maximum,t.cap,t.limit,t.maxValue,t.maximumValue);if(void 0!==e&&void 0!==i)return`${e}/${i}`;if(void 0!==e)return String(e);if(void 0!==t.current&&void 0!==t.max)return`${t.current}/${t.max}`;if(void 0!==t.current)return String(t.current);if(void 0!==t.rank&&void 0!==t.cap)return`${t.rank}/${t.cap}`;if(void 0!==t.rank)return String(t.rank);const n=Object.values(t).filter((t=>"number"==typeof t));return 1===n.length?String(n[0]):n.length>1?n.join("/"):""}#A(e,i){const n=e.translationKey;if(n)return t.Utils.i18n(n);if(e.label)return t.Utils.i18n(e.label);const s="standing"===i?"l5r5e.social":"l5r5e.attributes",r=e.actorKey??e.id;if(r){const e=`${s}.${String(r).replace(/-/g,"_").toLowerCase()}`;return t.Utils.i18n(e)}return e.id}#p(e,i,{fallbackPrefix:n}={}){const r=i?.get(e);let a=r?.translationKey,o=r?.label;if(!a&&n){a=`${n}.${String(r?.actorKey??e).replace(/-/g,"_").toLowerCase()}`}const l=s?.[e]?.name;return{id:e,name:a?t.Utils.i18n(a):o?t.Utils.i18n(o):l?t.Utils.i18n(l):this.#I(e),type:"system"}}#f(e){const i=e,n=s?.[i]?.name;return{id:i,name:n?t.Utils.i18n(n):i,type:"system"}}#q(...t){return t.find((t=>null!=t))}#v(t,e){if(!t||!e)return;if(Object.hasOwn(t,e))return t[e];const i=String(e).split(".");let n=t;for(const t of i){if(null==n)return;n=n[t]}return n}#i(t){return new Map(t.map((t=>[t.id,t])))}#I(t){return String(t??"").split(/[-_]/).filter((t=>t.length>0)).map((t=>t.charAt(0).toUpperCase()+t.slice(1))).join(" ")}async#y(t,e,i="item"){if(0===t.size)return;if(!("string"==typeof e?e:e?.id))return;const n=await Promise.all([...t].map((async t=>await this.#w(i,t[1]))));this.addActions(n,e)}async#w(e,i){const s=i.id??i._id;let r=i?.name??i?.label;const a=`${`${t.Utils.i18n(n[e])}: `??""}${r}`;let o="";if(Object.hasOwn(i.system,"readied")){o=`toggle${i.system.readied?" active":""}`}const l=[e,s].join(this.delimiter),c=t.Utils.getImage(i),u=this.#$(i?.system?.activation?.type);let d=this.#S(i);const p=d?.info1,y=d?.info2,m=d?.info3,h=await this.#T(i);return{id:s,name:r,encodedValue:l,cssClass:o,img:c,icon1:u,icon2:null,info1:p,info2:y,info3:m,listName:a,tooltip:await this.#U(h)}}#$(t){}#S(t){return{info1:{text:this.#P(t)},info2:{text:this.#K(t)},info3:{text:this.#C(t)}}}#P(t){const e=t?.system?.quantity??0;return e>1?e:""}#K(t){const e=t?.system?.uses;return e&&(e.value>0||e.max>0)?`${e.value??"0"}${e.max>0?`/${e.max}`:""}`:""}#C(t){const e=t?.system?.consume?.target,i=t?.system?.consume?.type;if(e===t.id)return"";if("attribute"===i){if(!e)return"";const t=e.substr(0,e.lastIndexOf(".")),i=this.actor.system[t];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const n=this.items.get(e);if("charges"===i){const t=n?.system.uses;return t?.value?`${t.value}${t.max?`/${t.max}`:""}`:""}return n?.system?.quantity??""}async#T(t){if("none"===this.tooltipsSetting)return"";const e=t?.name??"";if("nameOnly"===this.tooltipsSetting)return e;const i="string"==typeof t?.system?.description?t?.system?.description:t?.system?.description?.value??"",n=t?.modifiers??null,s=[...t.system?.chatProperties??[],...t.system?.equippableItemCardProperties??[],...t.system?.activatedEffectCardProperties??[]].filter((t=>t)),r=t?.type;return{name:e,type:r,description:i,modifiers:n,properties:s,rarity:t?.system?.rarity??null,traits:this.#_(t?.system?.properties),range:"weapon"===t?.type?t?.system?.range:null,damage:"weapon"===t?.type?t?.system?.damage:null,deadliness:"weapon"===t?.type?t?.system?.deadliness:null,grip1:"weapon"===t?.type?t?.system?.grip_1:null,grip2:"weapon"===t?.type?t?.system?.grip_2:null,physical:"armor"===t?.type?t?.system?.armor?.physical:null,supernatural:"armor"===t?.type?t?.system?.armor?.supernatural:null}}#_(t){return t?Object.entries(t).map((([t,e])=>e.name)):null}async#U(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const i=t.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return i;const n=`<h3>${i}</h3>`,s=e?.descriptionLocalised??await TextEditor.enrichHTML(t.Utils.i18n(e?.description??""),{async:!0}),r=e?.rarity?`<div class="tah-tags-wrapper"><span class="tah-tag ${this.#D(e.rarity)}">Rarity: ${e.rarity}</span></div>`:"",a=e?.traits?`<div class="tah-properties">${e.traits.map((t=>`<span class="tah-property">${t}</span>`)).join("")}</div>`:"",o=[r,"weapon"===e.type?this.#E(e):"","weapon"===e.type?this.#H(e):"","armor"===e.type?this.#x(e):""].join(""),l=o?`<div class="tah-tags">${o}</div>`:"";return s||l?`<div>${n}${l?`<div class="tah-tags-wrapper">${l}</div>`:""}${s}${a}</div>`:i}#D(t){return t?t<3?"common":t<5?"uncommon":t<7?"rare":t<9?"veryRare":9==t?"legendary":10==t?"artifact":void 0:""}#E(e){return[`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.range")}: ${e.range}</span>`,`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.damage")}: ${e.damage}</span>`,`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.deadliness")}: ${e.deadliness}</span>`].join("")}#H(e){return[e.grip1&&"N/A"!==e.grip1?`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.1hand")}: ${e.grip1}</span>`:"",e.grip2&&"N/A"!==e.grip2?`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.2hand")}: ${e.grip2}</span>`:""].join("")}#x(e){return[e?.physical&&e?.physical>0?`<span class="tah-tag">${t.Utils.i18n("l5r5e.armors.physical")}: ${e?.physical}</span>`:"",e?.supernatural&&e?.supernatural>0?`<span class="tah-tag">${t.Utils.i18n("l5r5e.armors.supernatural")}: ${e?.supernatural}</span>`:""].join("")}}}Hooks.once("tokenActionHudCoreApiReady",(async e=>{p=class Utils{static getSetting(i,n=null){let s=n??null;try{s=game.settings.get(t.ID,i)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}return s}static async setSetting(i,n){try{n=await game.settings.set(t.ID,i,n),e.api.Logger.debug(`Setting '${i}' set to '${n}'`)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}}}}));let y=null;function getCoreModule(){const t=game.modules.get(e.ID);if(!t)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return t}function getCoreApi(){const t=getCoreModule();if(!t.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return t.api}function createRollHandlerClass(t){return class RollHandler extends t.RollHandler{async handleActionClick(t,e){const[i,n]=e.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,n);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#M(t,this.actor,n);const s=["character"];if(this.actor)return void await this.#j(t,this.actor,this.token,i,n);const r=canvas.tokens.controlled.filter((t=>s.includes(t.actor?.type)));for(const e of r){const s=e.actor;await this.#j(t,s,e,i,n)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#j(t,e,i,n,s){switch(n){case"weapons":this.#z(t,e,s);break;case"ring":this.#L(t,e,s);break;case"skill":this.#G(t,e,s);break;case"technique":this.#R(t,e,s);break;case"armor":case"equipment":await this.#O(t,e,s);break;case"utility":this.#N(i,s)}}async#O(t,e,i){const n=e.items.get(i);await game.l5r5e.HelpersL5r5e.sendToChat(n)}async#M(t,e,i){}#z(t,e,i){const n=e.items.get(i);new game.l5r5e.DicePickerDialog({skillId:n.system.skill}).render(!0)}#L(t,e,i){new game.l5r5e.DicePickerDialog({ringId:i}).render(!0)}#G(t,e,i){new game.l5r5e.DicePickerDialog({skillId:i}).render(!0)}#R(t,e,i){const n=e.items.get(i);n&&"technique"===n.type&&n.system.skill&&new game.l5r5e.DicePickerDialog({skillsList:n.system.skill,ringId:n.system.ring,difficulty:n.system.difficulty}).render(!0)}async#N(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}function createSystemManagerClass(t){const e=createActionHandlerClass(t),i=createRollHandlerClass(t);return class SystemManager extends t.SystemManager{getActionHandler(){return new e}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new i,e}async registerDefaults(){return y}registerSettings(t){register(t)}}}Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=s,i=getTechniqueTypeEntries();i.forEach((t=>{e[t.id]?e[t.id].name||(e[t.id].name=t.translationKey??t.label??t.id):e[t.id]={id:t.id,name:t.translationKey??t.label??t.id,type:"system"}})),Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e),r=i.map((t=>({...e[t.id],nestId:`techniques_${String(t.actorKey??t.id).replace(/[^a-zA-Z0-9]+/g,"_")}`})));y={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:t.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...e.rings,nestId:"attributes_rings"},{...e.derived,nestId:"attributes_derived"},{...e.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("l5r5e.skills.title"),groups:[{...e.artisan,nestId:"skills_artisan"},{...e.martial,nestId:"skills_martial"},{...e.scholar,nestId:"skills_scholar"},{...e.social,nestId:"skills_social"},{...e.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:t.api.Utils.i18n("l5r5e.techniques.title"),groups:r},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}})),Hooks.once("tokenActionHudCoreApiReady",(e=>{try{if("function"!=typeof e.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(e);e.registerSystem({moduleId:t.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(t){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",t)}}));export{n as ACTION_TYPE,e as CORE_MODULE,y as DEFAULTS,s as GROUP,l as ITEM_PATTERN,o as ITEM_QUALITIES,r as ITEM_TYPE,t as MODULE,i as REQUIRED_CORE_MODULE_VERSION,a as SKILL_TYPE,p as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getActorSection,getAttributeEntries,getCoreApi,getCoreModule,getInventoryGroupEntries,getTechniqueTypeEntries,register,sanitizeId,unsanitizeId};
