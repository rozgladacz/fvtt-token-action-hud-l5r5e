const t={ID:"token-action-hud-l5r5e"},e={ID:"token-action-hud-core"},i="2.0.12",s={item:"tokenActionHud.template.item",utility:"tokenActionHud.utility"},n={armor:{id:"armor",name:"l5r5e.armors.title",type:"system"},equipment:{id:"equipment",name:"l5r5e.items.title",type:"system"},equipped:{id:"equipped",name:"Equipped",type:"system"},unequipped:{id:"unequipped",name:"Unequipped",type:"system"},weapons:{id:"weapons",name:"l5r5e.weapons.title",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},rests:{id:"rests",name:"tokenActionHud.rests",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},rings:{id:"rings",name:"l5r5e.rings.title",type:"system"},derived:{id:"derived",name:"l5r5e.attributes.title",type:"system"},standing:{id:"standing",name:"l5r5e.social.title",type:"system"},artisan:{id:"artisan",name:"l5r5e.skills.artisan.title",type:"system"},martial:{id:"martial",name:"l5r5e.skills.martial.title",type:"system"},scholar:{id:"scholar",name:"l5r5e.skills.scholar.title",type:"system"},social:{id:"social",name:"l5r5e.skills.social.title",type:"system"},trade:{id:"trade",name:"l5r5e.skills.trade.title",type:"system"},kata:{id:"kata",name:"l5r5e.techniques.kata",type:"system"},kiho:{id:"kiho",name:"l5r5e.techniques.kiho",type:"system"},inversion:{id:"inversion",name:"l5r5e.techniques.inversion",type:"system"},invocation:{id:"invocation",name:"l5r5e.techniques.invocation",type:"system"},ritual:{id:"ritual",name:"l5r5e.techniques.ritual",type:"system"},shuji:{id:"shuji",name:"l5r5e.techniques.shuji",type:"system"},maho:{id:"maho",name:"l5r5e.techniques.maho",type:"system"},ninjutsu:{id:"ninjutsu",name:"l5r5e.techniques.ninjutsu",type:"system"},mantra:{id:"mantra",name:"l5r5e.techniques.mantra",type:"system"},school_ability:{id:"school-ability",name:"l5r5e.techniques.school_ability",type:"system"},mastery_ability:{id:"mastery-ability",name:"l5r5e.techniques.mastery_ability",type:"system"},title_ability:{id:"title-ability",name:"l5r5e.techniques.title_ability",type:"system"}},a={armor:{groupId:"armor"},equipment:{groupId:"equipment"},weapon:{groupId:"weapons"}},r={artisan:{groupId:"artisan"},martial:{groupId:"martial"},scholar:{groupId:"scholar"},social:{groupId:"social"},trade:{groupId:"trade"}},l={razor_edged:"Razor-Edged",ceremonial:"Ceremonial",damaged:"Damaged",destroyed:"Destroyed",concealable:"Concealable",cumbersome:"Cumbersome",snaring:"Snaring",unholy:"Unholy",forbidden:"Forbidden",resplendent:"Resplendent",wargear:"Wargear",mundane:"Mundane",prepare:"Prepare",sacred:"Sacred",durable:"Durable",subtle:"Subtle",kenzo_blade:"Kenzō Blade"},o={jade_inlay:"Shirogane Jade Inlay",uchema:"Uchema’s Technique",yasunori:"Yasunori Steel",akodo:"Akodo Pattern",burning_water:"Burning Watter Pattern",concealment:"Concealment Pattern",deadly_fangs:"Deadly Fangs Pattern",fearsome_snarl:"Fearsome Snarl Pattern",ichiro:"Ichirō Pattern",mountain_silk:"Mountain Silk Pattern",screaming_fire:"Screaming Fire Pattern",toriyama:"Toriyama Endurance Pattern",qamarist:"Spirit of the Qamarist Pattern",yodhaniya:"Ghostlands Yodhaniya Pattern",kokejin:"Kökejin’s Heart of the Wind Pattern",agasha:"Agasha Pattern"};let c=null;function createActionHandlerClass(t){return class ActionHandler extends t.ActionHandler{async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.displayUnequipped=c.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType||"npc"===this.actorType?(this.inventorygroupIds=["armor","equipment","weapons"],this.techniqueGroupIds=["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school-ability","mastery-ability","title-ability"],await this.#i()):this.actor||this.#s()}async#i(){await Promise.all([this.#n(),this.#a()]),this.#r(),this.#l()}#s(){}async#n(){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){const s=i.system.equipped,n=i.system?.quantity>0,a=this.#o(i),r=i.type;n&&(s&&(e.has("equipped")||e.set("equipped",new Map),e.get("equipped").set(t,i)),s||(e.has("unequipped")||e.set("unequipped",new Map),e.get("unequipped").set(t,i)),a&&("item"===r&&(e.has("equipment")||e.set("equipment",new Map),e.get("equipment").set(t,i)),"weapon"===r&&(e.has("weapons")||e.set("weapons",new Map),e.get("weapons").set(t,i)),"armor"===r&&(e.has("armor")||e.set("armor",new Map),e.get("armor").set(t,i))))}const i={equipment:t.Utils.i18n("l5r5e.items.title"),armor:t.Utils.i18n("l5r5e.armors.title"),weapons:t.Utils.i18n("l5r5e.weapons.title")};for(const t of this.inventorygroupIds){if(!e.has(t))continue;const s={id:t,name:i[t],type:"system"},n=e.get(t);await this.#c(n,s,t)}}#r(){const e="ring",i=game.l5r5e.HelpersL5r5e.getRingsList(this.actor);if(0===i.length)return;const s=this.actor.system.stance,n={id:"rings",name:`${t.Utils.i18n("l5r5e.rings.title")}`??"rings",type:"system"},a=Object.values(i).map((i=>{try{const n=i.id,a=[e,n].join(this.delimiter),r=`${t.Utils.i18n(`l5r5e.rings.${n}`)}: ${i.value}`??"",l=`${`${i.label}:`??""}${r}`,o=t.Utils.getImage(`systems/l5r5e/assets/icons/rings/${n}.svg`),c=`${t.Utils.i18n(`l5r5e.conflict.stances.${n}tip`)}`;let d="";return n===s&&(d="toggle active"),{id:n,name:r,img:o,encodedValue:a,cssClass:d,tooltip:c,listName:l}}catch(e){return t.Logger.error(i),null}})).filter((t=>!!t));this.addActions(a,n)}#l(){if(!["character","npc"].includes(this.actorType))return;const e="skill",i=this.#d();for(const s of i){const i=s.id;try{const n={id:i,name:s.label,type:"system"},a=s.skills.map((s=>{const n=[e,s].join(this.delimiter),a=this.#u(i,s),r=this.#p(i,s),l=""!==a&&null!=a?`${r}: ${a}`:r;return{id:s,name:l,encodedValue:n,listName:`${`${t.Utils.i18n("l5r5e.skills.label")}: `??""}${l}`}}));this.addActions(a,n)}catch(e){return t.Logger.error(i),null}}}#d(){const t=game.l5r5e?.HelpersL5r5e??{},e="npc"===this.actorType?t.getNpcSkillsList?.(this.actor)??t.getNpcSkillsList?.()??t.getCategoriesSkillsList?.(this.actor)??t.getCategoriesSkillsList?.()??this.actor?.system?.skills??this.actor?.system?.npcSkills:t.getCategoriesSkillsList?.(this.actor)??t.getCategoriesSkillsList?.()??this.actor?.system?.skills;return this.#m(e).map((([t,e])=>{const i=this.#y(e);return{id:t,label:this.#h(t),skills:i}})).filter((t=>t.skills.length>0))}#m(t){return t?t instanceof Map?[...t.entries()]:Array.isArray(t)?t.map(((t,e)=>Array.isArray(t)?t:[e,t])):"object"==typeof t?Object.entries(t):[]:[]}#y(t){return t?t instanceof Map?this.#g([...t.values()]):Array.isArray(t)?this.#g(t.flatMap((t=>this.#y(t)))):"string"==typeof t?this.#g([t]):"object"==typeof t?t.id?this.#y(t.id):t.key?this.#y(t.key):t.value?this.#y(t.value):t.default?this.#y(t.default):this.#g(Object.values(t).flatMap((t=>this.#y(t)))):[]:[]}#g(t){return[...new Set(t.filter((t=>"string"==typeof t&&t)))]}#h(t){const e=[`l5r5e.npc.skills.${t}.title`,`l5r5e.skills.${t}.title`,`l5r5e.skills.${t}`,t];return this.#k(e)}#p(t,e){const i=[`l5r5e.npc.skills.${t}.${e}`,`l5r5e.skills.${t}.${e}`,`l5r5e.skills.${e}`,`l5r5e.skill.${e}`,e];return this.#k(i)}#u(t,e){const i=[this.actor?.system?.skills,this.actor?.system?.npcSkills,this.actor?.system?.npc?.skills,this.actor?.system?.skillRanks,this.actor?.system?.skillGroups,this.actor?.system?.skill_groups];for(const s of i){const i=s?.[t];if(!i)continue;const n=i?.[e],a=this.#f(n);if(null!=a)return a}const s=this.actor?.system?.skills?.[e],n=this.#f(s);return null!=n?n:""}#f(t){if(null==t)return null;if("number"==typeof t||"string"==typeof t)return t;if("object"==typeof t)for(const e of["value","rank","dice","level","rating"])if(void 0!==t[e])return t[e];return null}#k(e){for(const i of e){if(!i)continue;const e=t.Utils.i18n(i);if(e&&e!==i)return e}return e[e.length-1]??""}async#a(t){if(0===this.items.size)return;const e=new Map;for(const[t,i]of this.items){if(this.#I(i)){const s=String(i.system.technique_type).replace("_","-");e.has(s)||e.set(s,new Map),e.get(s).set(t,i)}}for(const t of this.techniqueGroupIds){if(!e.has(t))continue;const i={id:t,type:"system"},s=e.get(t);await this.#c(s,i,"technique")}}#t(){const e=["character","npc"],i=t.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return i.every((t=>e.includes(t.type)))?i:[]}#e(){const e=["character","npc"],i=t.Utils.getControlledTokens(),s=i?.filter((t=>t.actor)).map((t=>t.actor));return s.every((t=>e.includes(t.type)))?i:[]}#o(t){const e=t.type;if(this.displayUnequipped&&!["item","technique","peculiarity"].includes(e))return!0;return!!t.system.equipped}#I(t){if("technique"!==t.type)return!1;return!!["kata","kiho","inversion","invocation","ritual","shuji","maho","ninjutsu","mantra","school_ability","mastery_ability","title_ability"].includes(t.system.technique_type)}async#c(t,e,i="item"){if(0===t.size)return;if(!("string"==typeof e?e:e?.id))return;const s=await Promise.all([...t].map((async t=>await this.#b(i,t[1]))));this.addActions(s,e)}async#b(e,i){const n=i.id??i._id;let a=i?.name??i?.label;const r=`${`${t.Utils.i18n(s[e])}: `??""}${a}`;let l="";if(Object.hasOwn(i.system,"readied")){l=`toggle${i.system.readied?" active":""}`}const o=[e,n].join(this.delimiter),c=t.Utils.getImage(i),d=this.#A(i?.system?.activation?.type);let u=this.#v(i);const p=u?.info1,m=u?.info2,y=u?.info3,h=await this.#q(i);return{id:n,name:a,encodedValue:o,cssClass:l,img:c,icon1:d,icon2:null,info1:p,info2:m,info3:y,listName:r,tooltip:await this.#S(h)}}#A(t){}#v(t){return{info1:{text:this.#w(t)},info2:{text:this.#$(t)},info3:{text:this.#C(t)}}}#w(t){const e=t?.system?.quantity??0;return e>1?e:""}#$(t){const e=t?.system?.uses;return e&&(e.value>0||e.max>0)?`${e.value??"0"}${e.max>0?`/${e.max}`:""}`:""}#C(t){const e=t?.system?.consume?.target,i=t?.system?.consume?.type;if(e===t.id)return"";if("attribute"===i){if(!e)return"";const t=e.substr(0,e.lastIndexOf(".")),i=this.actor.system[t];return i?`${i.value??"0"}${i.max?`/${i.max}`:""}`:""}const s=this.items.get(e);if("charges"===i){const t=s?.system.uses;return t?.value?`${t.value}${t.max?`/${t.max}`:""}`:""}return s?.system?.quantity??""}async#q(t){if("none"===this.tooltipsSetting)return"";const e=t?.name??"";if("nameOnly"===this.tooltipsSetting)return e;const i="string"==typeof t?.system?.description?t?.system?.description:t?.system?.description?.value??"",s=t?.modifiers??null,n=[...t.system?.chatProperties??[],...t.system?.equippableItemCardProperties??[],...t.system?.activatedEffectCardProperties??[]].filter((t=>t)),a=t?.type;return{name:e,type:a,description:i,modifiers:s,properties:n,rarity:t?.system?.rarity??null,traits:this.#_(t?.system?.properties),range:"weapon"===t?.type?t?.system?.range:null,damage:"weapon"===t?.type?t?.system?.damage:null,deadliness:"weapon"===t?.type?t?.system?.deadliness:null,grip1:"weapon"===t?.type?t?.system?.grip_1:null,grip2:"weapon"===t?.type?t?.system?.grip_2:null,physical:"armor"===t?.type?t?.system?.armor?.physical:null,supernatural:"armor"===t?.type?t?.system?.armor?.supernatural:null}}#_(t){return t?Object.entries(t).map((([t,e])=>e.name)):null}async#S(e){if("none"===this.tooltipsSetting)return"";if("string"==typeof e)return e;const i=t.Utils.i18n(e.name);if("nameOnly"===this.tooltipsSetting)return i;const s=`<h3>${i}</h3>`,n=e?.descriptionLocalised??await TextEditor.enrichHTML(t.Utils.i18n(e?.description??""),{async:!0}),a=e?.rarity?`<div class="tah-tags-wrapper"><span class="tah-tag ${this.#U(e.rarity)}">Rarity: ${e.rarity}</span></div>`:"",r=e?.traits?`<div class="tah-properties">${e.traits.map((t=>`<span class="tah-property">${t}</span>`)).join("")}</div>`:"",l=[a,"weapon"===e.type?this.#H(e):"","weapon"===e.type?this.#T(e):"","armor"===e.type?this.#j(e):""].join(""),o=l?`<div class="tah-tags">${l}</div>`:"";return n||o?`<div>${s}${o?`<div class="tah-tags-wrapper">${o}</div>`:""}${n}${r}</div>`:i}#U(t){return t?t<3?"common":t<5?"uncommon":t<7?"rare":t<9?"veryRare":9==t?"legendary":10==t?"artifact":void 0:""}#H(e){return[`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.range")}: ${e.range}</span>`,`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.damage")}: ${e.damage}</span>`,`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.deadliness")}: ${e.deadliness}</span>`].join("")}#T(e){return[e.grip1&&"N/A"!==e.grip1?`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.1hand")}: ${e.grip1}</span>`:"",e.grip2&&"N/A"!==e.grip2?`<span class="tah-tag">${t.Utils.i18n("l5r5e.weapons.2hand")}: ${e.grip2}</span>`:""].join("")}#j(e){return[e?.physical&&e?.physical>0?`<span class="tah-tag">${t.Utils.i18n("l5r5e.armors.physical")}: ${e?.physical}</span>`:"",e?.supernatural&&e?.supernatural>0?`<span class="tah-tag">${t.Utils.i18n("l5r5e.armors.supernatural")}: ${e?.supernatural}</span>`:""].join("")}}}function getCoreModule(){const t=game.modules.get(e.ID);if(!t)throw new Error("Token Action HUD Core module is not available. Please ensure it is installed and active.");return t}function getCoreApi(){const t=getCoreModule();if(!t.api)throw new Error("Token Action HUD Core API is not available. Ensure you are using Token Action HUD Core 2.x or later.");return t.api}Hooks.once("tokenActionHudCoreApiReady",(async e=>{c=class Utils{static getSetting(i,s=null){let n=s??null;try{n=game.settings.get(t.ID,i)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}return n}static async setSetting(i,s){try{s=await game.settings.set(t.ID,i,s),e.api.Logger.debug(`Setting '${i}' set to '${s}'`)}catch{e.api.Logger.debug(`Setting '${i}' not found`)}}}}));let d=null;function createRollHandlerClass(t){return class RollHandler extends t.RollHandler{async handleActionClick(t,e){const[i,s]=e.split("|");if(["item","weapons","technique","armor"].includes(i)&&this.isRenderItem())return this.doRenderItem(this.actor,s);if(["ring"].includes(i)&&this.isRenderItem()&&"ring"===i)return void await this.#x(t,this.actor,s);const n=["character"];if(this.actor)return void await this.#M(t,this.actor,this.token,i,s);const a=canvas.tokens.controlled.filter((t=>n.includes(t.actor?.type)));for(const e of a){const n=e.actor;await this.#M(t,n,e,i,s)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#M(t,e,i,s,n){switch(s){case"weapons":this.#D(t,e,n);break;case"ring":this.#R(t,e,n);break;case"skill":this.#L(t,e,n);break;case"technique":this.#P(t,e,n);break;case"armor":case"equipment":await this.#z(t,e,n);break;case"utility":this.#E(i,n)}}async#z(t,e,i){const s=e.items.get(i);if(!s)return;const n=game.l5r5e??{},a=n.HelpersL5r5e??{},r=n.Chat??n.chat??{},l=[a.sendItemToChat,a.sendToChat,r.sendItemToChat,r.displayItem,s?.sendToChat?.bind(s),s?.displayCard?.bind(s),s?.toMessage?.bind(s)].filter((t=>"function"==typeof t));if(l.length>0)for(const t of l)try{return void await t(s)}catch(t){continue}"function"==typeof ChatMessage?.create?await ChatMessage.create({speaker:ChatMessage.getSpeaker({actor:e}),content:game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name})}):ui.notifications?.warn(game.i18n.format("tokenActionHud.l5r5e.itemChatFallback",{item:s.name}))}async#x(t,e,i){}#D(t,e,i){const s=e.items.get(i);if(!s)return;const n=this.#O(s?.system?.skill),a=this.#F(s?.system?.ring),r={item:s,itemId:s.id,sourceId:s.id,type:s.type,title:s.name,difficulty:s?.system?.tn??s?.system?.difficulty??null,context:"token-action-hud"};n.length>0&&(r.skill=n[0],r.skillId=n[0],r.skills=n,r.skillsList=n),a&&(r.ring=a,r.ringId=a),this.#N(e,r)}#R(t,e,i){const s={ring:i,ringId:i,context:"token-action-hud"};this.#N(e,s)}#L(t,e,i){const s={skill:i,skillId:i,context:"token-action-hud"};this.#N(e,s)}#P(t,e,i){const s=e.items.get(i);if(!s||"technique"!==s.type||!s.system.skill)return;const n=this.#O(s?.system?.skill),a=this.#F(s?.system?.ring),r=s?.system?.difficulty??s?.system?.tn??null,l={item:s,itemId:s.id,sourceId:s.id,type:s.type,title:s.name,difficulty:r,context:"token-action-hud"};n.length>0&&(l.skill=n[0],l.skillId=n[0],l.skills=n,l.skillsList=n),a&&(l.ring=a,l.ringId=a),this.#N(e,l)}#N(t,e={}){const i=game?.l5r5e?.DicePickerDialog;if(!i)return;const s={...e};t&&!s.actor&&(s.actor=t),t?.id&&!s.actorId&&(s.actorId=t.id);const n=this.#V([s.skill,s.skillId,...Array.isArray(s.skills)?s.skills:[],...Array.isArray(s.skillsList)?s.skillsList:[]]);n.length>0&&(s.skill=n[0],s.skillId=n[0],s.skills=n,s.skillsList=n);const a=this.#F(s.ring??s.ringId??s.ringKey);a&&(s.ring=a,s.ringId=a,s.ringKey=a),s.context||(s.context="token-action-hud");const r=[];("number"==typeof i.length?i.length:1)>1&&r.push(t),r.push(s);const l=new i(...r);"function"==typeof l.render&&l.render(!0)}#F(t){if(t){if("string"==typeof t)return t;if(Array.isArray(t))for(const e of t){const t=this.#F(e);if(t)return t}else if("object"==typeof t){const e=["ring","id","key","value","default","defaultRing"];for(const i of e)if(t[i]){const e=this.#F(t[i]);if(e)return e}}}}#O(t){if(!t)return[];if(Array.isArray(t))return this.#V(t.flatMap((t=>this.#O(t))));if("string"==typeof t)return[t];if("object"==typeof t){const e=["id","ids","skill","skills","value","values","default","primary"];for(const i of e)if(t[i])return this.#O(t[i]);return this.#V(Object.values(t).flatMap((t=>this.#O(t))))}return[]}#V(t){return[...new Set(t.filter((t=>"string"==typeof t&&t)))]}async#E(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}function register(e){game.settings.register(t.ID,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.l5r5e.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}function createSystemManagerClass(t){const e=createActionHandlerClass(t),i=createRollHandlerClass(t);return class SystemManager extends t.SystemManager{getActionHandler(){return new e}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new i,e}async registerDefaults(){return d}registerSettings(t){register(t)}}}Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=n;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const i=Object.values(e);d={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("l5r5e.sheets.inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_items"}]},{nestId:"attributes",id:"attributes",name:t.api.Utils.i18n("l5r5e.attributes.title"),groups:[{...e.rings,nestId:"attributes_rings"},{...e.derived,nestId:"attributes_derived"},{...e.standing,nestId:"attributes_standing"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("l5r5e.skills.title"),groups:[{...e.artisan,nestId:"skills_artisan"},{...e.martial,nestId:"skills_martial"},{...e.scholar,nestId:"skills_scholar"},{...e.social,nestId:"skills_social"},{...e.trade,nestId:"skills_trade"}]},{nestId:"techniques",id:"techniques",name:t.api.Utils.i18n("l5r5e.techniques.title"),groups:[{...e.school_ability,nestId:"techniques_school"},{...e.mastery_ability,nestId:"techniques_mastery"},{...e.kata,nestId:"techniques_kata"},{...e.kiho,nestId:"techniques_kiho"},{...e.inversion,nestId:"techniques_inversion"},{...e.invocation,nestId:"techniques_invocation"},{...e.ritual,nestId:"techniques_ritual"},{...e.shuji,nestId:"techniques_shuji"},{...e.maho,nestId:"techniques_maho"},{...e.ninjutsu,nestId:"techniques_ninjutsu"},{...e.mantra,nestId:"techniques_mantra"},{...e.title_ability,nestId:"techniques_title"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:i}})),Hooks.once("tokenActionHudCoreApiReady",(e=>{try{if("function"!=typeof e.registerSystem)return void console.error("Token Action HUD Core API does not provide registerSystem. Please update Token Action HUD Core to version 2.x.");const i=createSystemManagerClass(e);e.registerSystem({moduleId:t.ID,requiredCoreModuleVersion:"2.0.12",SystemManager:i})}catch(t){console.error("Failed to register Token Action HUD L5R5E system with Token Action HUD Core.",t)}}));export{s as ACTION_TYPE,e as CORE_MODULE,d as DEFAULTS,n as GROUP,o as ITEM_PATTERN,l as ITEM_QUALITIES,a as ITEM_TYPE,t as MODULE,i as REQUIRED_CORE_MODULE_VERSION,r as SKILL_TYPE,c as Utils,createActionHandlerClass,createRollHandlerClass,createSystemManagerClass,getCoreApi,getCoreModule,register};
